{"version":3,"sources":["containers/Dashboard/StaffInfo/StaffInfo.css","containers/Login/Login.css","components/common/DashboardBody/DashboardBody.css","containers/Dashboard/Brand/Brand.css","api/server.js","components/graph/ProductNumGraph.js","api/serverAPI.config.js","utils/Base64Encoder.js","api/api.js","containers/Login/Login.js","containers/404/NotFound.js","components/Route/PrivateRoute.js","hoc/ComponentWithParameter.js","containers/Dashboard/DashboardRedirect/DashboardRedirect.js","components/UI/LogoutModal/LogoutModal.js","components/common/DashboardBody/DashboardBody.js","components/graph/SaleGraph.js","components/graph/BarGraph.js","components/graph/TimeLineGraph.js","containers/Dashboard/Home/Home.js","components/UI/LotteryAddModal/LotteryAddModal.js","redux/actions/lotteryAction.js","containers/Dashboard/LotteryManagement/LotteryManagement.js","utils/ObjectIdDecoder.js","containers/Dashboard/WebClient/WebClient.js","components/UI/LocalClientAddModal/LocalClientAddModal.js","redux/actions/localClientAction.js","containers/Dashboard/LocalClient/LocalClient.js","components/UI/StaffEditModal/StaffEditModal.js","redux/actions/StaffInfoAction.js","components/UI/StaffAddModal/StaffAddModal.js","components/UI/GeneralConfirmModal/GeneralConfirmModal.js","containers/Dashboard/StaffInfo/StaffInfo.js","components/UI/AddCompanyDescriptionModal/AddCompanyDescriptionModal.js","components/UI/EditCompanyDescriptionModal/EditCompanyDescriptionModal.js","containers/Dashboard/CompanyDescription/CompanyDescription.js","components/UI/BrandAddModal/BrandAddModal.js","redux/actions/BrandAction.js","components/UI/BrandDeleteModal/BrandDeleteModal.js","components/UI/BrandEditModal/BrandEditModal.js","containers/Dashboard/Brand/Brand.js","redux/actions/ProductCategoryAction.js","components/UI/ProductCategoryEditModal/ProductCategoryEditModal.js","containers/Dashboard/ProductCategory/ProductCategory.js","components/UI/ChangePassword/changepasswordModal.js","containers/Dashboard/ChangePassword/ChangePassword.js","components/UI/AddProductModal/AddProductModal.js","components/UI/EditProductModal/EditProductModal.js","components/UI/ProductPreviewModal/ProductPreviewModal.js","containers/Dashboard/Product/Product.js","utils/ImageUploader.js","containers/Dashboard/Publish/TextEditor/TextEditor.js","redux/actions/NewsAction.js","containers/Dashboard/Publish/NewsTitleForm/NewsTitleForm.js","containers/Dashboard/Publish/FinishResult/FinishResult.js","containers/Dashboard/Publish/Publish.js","containers/Dashboard/NewsInfo/NewsInfo.js","containers/Dashboard/NewsEdit/NewsEditForm/NewsEditForm.js","containers/Dashboard/NewsEdit/NewsEditTextEditor/NewsEditTextEditor.js","redux/actions/NewsEditAction.js","containers/Dashboard/NewsEdit/NewsEdit.js","containers/Dashboard/EmailSender/EmailSender.js","Route/DashboardRoute.js","containers/Dashboard/Dashboard.js","redux/actions/menuBarAction.js","components/common/Loading/Loading.js","App.js","serviceWorker.js","redux/reducers/menuBarReducer.js","redux/reducers/lotteryReducer.js","redux/reducers/localClientReducer.js","redux/reducers/StaffInfoReducer.js","redux/reducers/BrandReducer.js","redux/reducers/ProductCategoryReducer.js","redux/reducers/NewsReducer.js","redux/reducers/NewsEditReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","axios","create","timeout","headers","interceptors","request","use","config","error","Promise","reject","response","data","status","localStorage","removeItem","window","location","alert","HOST","TestHost","url","Login","GetLottery","DeleteLottery","id","AddLottery","UpdateLottery","GetWebClient","DeleteWebClient","TokenValidate","GetLocalClient","DeleteLocalClient","UpdateLocalClient","AddLocalClient","GetStaff","UpdateStaff","GetBrands","PostBrands","GetProductCategory","UploadImage","UpdateProductCategory","FirstProductCategory","DeleteBrand","UpdateBrand","GetProducts","CHANGEPASSWORD","AddProduct","UpdateProduct","AddStaff","DeleteStaff","DeleteProduct","AddNews","GetNews","DeleteNews","GetsNewsContent","UpdateNews","GetAbout","PostAbout","DeleteAbout","UpdateAbout","SendEmailToLocalClient","SendTestEmailToPeople","GetLocalClientByPageNumber","num","Base64Encoder","str","btoa","server","method","ChangePassWord","Authorization","getItem","GetProductsById","GetNewsContent","AddAbout","LoginForm","props","state","height","innerHeight","isRedirect","componentDidMount","addEventListener","setState","componentWillUnmount","removeEventListener","console","log","handleSubmit","e","preventDefault","form","validateFields","err","values","formData","FormData","append","username","password","then","res","setItem","token","user_name","user_id","catch","error_message","getFieldDecorator","this","style","className","classes","login","loginForm","Title","textAlign","level","onSubmit","Item","rules","required","message","prefix","type","color","placeholder","htmlType","Component","LoginTemplate","Form","name","withRouter","NotFound","PrivateRoute","component","rest","render","to","ComponentWithParameter","Wrapper","pos","DashboardRedirect","history","push","LogoutModal","title","visible","onOk","confirm","onCancel","hideModal","okText","cancelText","Header","Layout","Content","DashboardBody","logoutModalVisible","openLogoutModal","DropDownMenu","key","onClick","Divider","hideLogoutModal","LogoutHandler","background","float","display","overlay","trigger","user","icon","margin","overflow","padding","minHeight","children","SaleGraph","action","total","dangerouslySetInnerHTML","__html","yuan","footer","label","value","numeral","format","contentHeight","flag","marginLeft","visitData","beginDay","Date","getTime","i","x","moment","y","Math","floor","random","ProductNumGraph","salesData","BarGraph","chartData","y1","y2","TimeLineGraph","titleMap","Home","justify","span","marginTop","Option","Select","AddLotteryFormTemplate","connect","lotteryData","lotteryReducer","dispatch","SetData","payload","submit","gender","phone","setIsLoading","setTimeout","closeModal","min","marginRight","loading","isLoading","LotteryAddModal","HandleOk","cb","useState","EditableContext","React","createContext","EditableCell","getInput","inputType","renderCell","editing","dataIndex","record","index","restProps","initialValue","Consumer","EditableTable","isEditing","editingKey","DeleteHandler","map","s","_id","$oid","cancel","openLotteryAddModal","modalVisible","closeLotteryAddModal","columns","editable","text","save","onConfirm","disabled","edit","nextProps","row","fdata","components","body","cell","col","onCell","Provider","marginBottom","bordered","dataSource","rowClassName","pagination","onChange","LotteryTable","LotteryManagement","Decoder","encryptionId","parseInt","substring","WebClient","clients","toString","FetchClients","date","expandedRowRender","localClientData","localClientReducer","address","email","refreshPage","LocalClientAddModal","length","current_page_num","pageChange","page","size","defaultPageSize","current","LocalClientTable","LocalClient","StaffEditModal","UNSAFE_componentWillReceiveProps","resetFields","wechatFileList","imageFileList","wechatFile","fileList","Array","isArray","imageFile","HandlerSubmit","role","role_cn","facebook","linkedin","wechat","is_success","image","hideModalThenFetch","confirmLoading","destroyOnClose","layout","valuePropName","getValueFromEvent","listType","StaffInfoData","StaffInfoReducer","StaffAddModal","top","GeneralConfirmModal","StaffInfo","EditModalVisible","propsToModal","AddModalVisible","DeleteModalVisible","DeletePerson","FetchStaff","openEditModal","obj","hideEditModal","hideEditModalThenFetch","hideAddModal","openAddModal","AddStaffHandler","openDeleteModal","hideDeleteModal","tip","spinning","card","paddingBottom","href","width","src","AddCompanyDescription","Object","keys","forEach","TextArea","rows","EditCompanyDescriptionModal","timeline","timeline_cn","description","description_cn","subheading","subheading_cn","CompanyDescription","DeleteId","passToModal","OpenAddModal","AddAboutHandler","DeleteAboutHandler","OpenDeleteModal","OpenEditModal","EditHandler","Fragment","itemLayout","renderItem","item","actions","extra","alt","Meta","BrandAddModal","name_cn","BrandData","BrandReducer","BrandDeleteModal","BrandEditModal","updataBrand","Brand","DeleteConfirmModalVisible","currentBrandId","FetchBrands","UpdateBrandHandler","ConfirmDeleteBrandHandler","hideDeleteConfirmModal","OpenDeleteConfirmModal","gutter","opacity","add","FetchProductCategory","UpdateAndFetchProductCategory","ProductCategoryEditModal","Data","ProductCategoryReducer","ProductCategory","ProductCategoryVisible","hideProductCategoryModal","openProductCategoryModal","navigateTo","path","cursor","ChangepasswordModal","ChangePassword","confirmDirty","newpassword","oldpassword","changeModalVisible","openchangepasswordModal","hidechangepasswordModal","passwordchanged","handleConfirmBlur","target","validateToNextPassword","rule","callback","getFieldValue","force","compareToFirstPassword","submitpassword","hasFeedback","Password","validator","onBlur","Changepassword","ProductAddModal","productCategoryId","images","EditProductModal","updateProduct","code","environment","finish","material","shape","unit","color_cn","environment_cn","finish_cn","material_cn","shape_cn","size_cn","style_cn","type_cn","unit_cn","ProductPreviewModal","Search","Input","Product","dataShown","searchValue","AddProductModalVisible","EditProductModalVisible","DeleteProductModalVisible","ProductPreviewModalVisible","SelectImage","productDelete","price","price_cn","hideProductAddModal","openProductAddModal","UpdateProductHandler","AddProductHandler","hideProductEditModal","openProductEditModal","hideProductPreviewModal","openProductPreviewModal","SearchOnChangeHandler","result","filter","toLowerCase","includes","match","params","resp","hideDeleteProductModal","OpenDeleteProductModal","ConfirmDeleteHandler","UploadAdapter","loader","upload","file","resolve","myReader","FileReader","onloadend","default","readAsDataURL","TextEditor","content","content_cn","EditorOnChange","event","editor","getData","EditorCNOnchange","ConfirmHandler","ContentConfirmClick","ModalConfirmHandler","NewsData","newsTitle","newsContent","model","FinishPublish","ClassicEditor","onInit","plugins","get","createUploadAdapter","ImageUploader","toolbar","paddingTop","ContentStepBackClick","finalConfirmModalVisible","CloseFinalConfirmModal","NewsReducer","NewsTitleFormWrapper","title_cn","TitleStepNextClick","labelCol","wrapperCol","offset","NewsTitleForm","ResetAll","theme","Step","Steps","Publish","progressDot","stepPosition","StepPosition","NewsInfo","DeleteNewsTitleId","DeleteModalOpen","EditClickHandler","NewsEditFormWrapper","NewsEditForm","NewsEditTextEditor","ConfirmContent","EditConfirm","StepBack","NewsEdit","news_title_id","news_content_id","Id","newsTitleId","news_title","NewsEditFormSubmit","nextContext","ContentData","NewsEditReducer","EmailSender","subject","confirmModalVisible","test_email","SubjectOnChange","SendToAllButtonClickHandler","reload","TemplateTestSend","DashboardRoute","News","menu","items","DashBoardLayout","lazy","Dashboard","fallback","screens","SetPos","from","menuBarPos","menuBarReducer","Loading","App","exact","Boolean","hostname","initialState","combineReducers","createStore","reducer","applyMiddleware","thunk","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2498a648.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"StaffInfo__card__1R6r_\",\"edit\":\"StaffInfo__edit__2lm4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login__login__16MwG\",\"loginForm\":\"Login__loginForm__XYJZW\",\"loginFormButton\":\"Login__loginFormButton__3H_jT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"DashboardBody__user__1xsQU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add\":\"Brand__add__3CsGs\"};","import axios from 'axios';\n\n//取消请求\n// let CancelToken = axios.CancelToken\naxios.create({\n    timeout: 15000 ,// 请求超时时间\n    headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n    }\n});\n\n//拦截请求\naxios.interceptors.request.use(config=>{\n    // let requestName = config.url;\n    // if(requestName) {\n    //     if(axios[requestName]&&axios[requestName].cancel){\n    //         axios[requestName].cancel()\n    //     }\n    //     config.cancelToken = new CancelToken(c => {\n    //         axios[requestName] = {};\n    //         axios[requestName].cancel = c\n    //     })\n    // }\n    return config\n},error=>{\n    return Promise.reject(error)\n});\n\n\n\naxios.interceptors.response.use(\n    response=>{\n        const res = response.data;\n\n        return res\n    }\n    ,error => {\n        if (error.response.data === \"Unauthorized Access\" || error.response.status===401){\n            localStorage.removeItem('token')\n            window.location = \"/login\"\n            alert(\"Login timeout, plz login again\")\n        }\n        return Promise.reject(error.response.data)\n    });\n\n\n\nexport default axios\n","import React,{Component} from 'react'\nimport { ChartCard, Field, MiniBar } from 'ant-design-pro/lib/Charts';\n\nimport { Icon, Tooltip } from 'antd';\nimport numeral from 'numeral';\nimport moment from 'moment'\nconst visitData = [];\nconst beginDay = new Date().getTime();\nfor (let i = 0; i < 20; i += 1) {\n    visitData.push({\n        x: moment(new Date(beginDay + 1000 * 60 * 60 * 24 * i)).format('YYYY-MM-DD'),\n        y: Math.floor(Math.random() * 100) + 10,\n    });\n}\nclass ProductNumGraph extends Component{\n    render(){\n        return (\n            <ChartCard\n                title=\"访问量\"\n                action={\n                    <Tooltip title=\"指标说明\">\n                        <Icon type=\"info-circle-o\" />\n                    </Tooltip>\n                }\n                total={numeral(8846).format('0,0')}\n                footer={<Field label=\"日访问量\" value={numeral(1234).format('0,0')} />}\n                contentHeight={46}\n            >\n                <MiniBar height={46} data={visitData} />\n            </ChartCard>\n        )\n    }\n}\n\nexport default ProductNumGraph\n","/***\n *\n *统一定义接口，有利于维护\n *\n **/\nimport config from '../config'\n\nconst HOST = config.TestHost;\n\nconst url = {\n    Login: HOST + '/api/login',\n    GetLottery: HOST + '/api/lottery',\n    DeleteLottery: (id)=>{\n        return HOST + '/api/lottery/' +id\n    },\n    AddLottery: HOST + '/api/lottery',\n    UpdateLottery: (id) =>{\n        return HOST + '/api/lottery/' +id\n    },\n    GetWebClient: HOST + '/api/contact',\n    DeleteWebClient: (id) =>{\n        return HOST + '/api/contact/' + id\n    },\n    TokenValidate: HOST + \"/api/token_validate\",\n    GetLocalClient: HOST + '/api/local_client',\n    DeleteLocalClient: (id) =>{\n        return HOST + \"/api/local_client/\" + id\n    },\n    UpdateLocalClient: (id) =>{\n        return HOST + \"/api/local_client/\" + id\n    },\n    AddLocalClient: HOST + '/api/local_client',\n    GetStaff: HOST + '/api/staff',\n    UpdateStaff: (id) =>{\n        return HOST + '/api/staff/' + id\n    },\n    GetBrands: HOST + '/api/brand',\n    PostBrands: HOST + '/api/brand',\n    GetProductCategory: HOST + '/api/product_category',\n    UploadImage: HOST +'/api/upload_image',\n    UpdateProductCategory: (id) => {\n        return HOST + '/api/product_category/' + id\n    },\n    FirstProductCategory: (id) =>{\n        return HOST + '/api/product_category/' + id\n    },\n    DeleteBrand: (id) =>{\n        return HOST + '/api/brand/'+ id\n    },\n    UpdateBrand: (id) =>{\n        return HOST + \"/api/brand/\" +id\n    },\n    GetProducts: (id) =>{\n        return HOST + '/api/product/' +id\n    },\n    CHANGEPASSWORD:(id)=>{\n        return HOST + '/api/change_password/' +id\n    },\n    AddProduct: HOST + '/api/product',\n    UpdateProduct: (id) =>{\n        return HOST + '/api/product/' +id\n    },\n    AddStaff: HOST + '/api/staff',\n    DeleteStaff: (id) =>{\n        return HOST + '/api/staff/' + id\n    },\n    DeleteProduct: (id) =>{\n        return HOST + '/api/product/' +id\n    },\n    AddNews: HOST + '/api/news',\n    GetNews: HOST + '/api/news',\n    DeleteNews: (id) =>{\n        return HOST + '/api/news/' + id\n    },\n    GetsNewsContent: (id) =>{\n        return HOST + '/api/news/' +id\n    },\n    UpdateNews: HOST + '/api/news',\n    GetAbout: HOST + '/api/about',\n    PostAbout: HOST + '/api/about',\n    DeleteAbout: (id) =>{\n        return HOST + '/api/about/' + id\n    },\n    UpdateAbout: (id) =>{\n        return HOST + '/api/about/' + id\n    },\n    SendEmailToLocalClient: HOST + '/api/contact/local_client',\n    SendTestEmailToPeople: HOST+ '/api/contact/local_client/test',\n    GetLocalClientByPageNumber: (num) =>{\n        return HOST+ \"/api/local_client/pagination/\"+ num\n    }\n};\n\nexport default url\n\n\n","export const Base64Encoder = (str) =>{\n    return btoa(str+\":unused\")\n}\n\n","import server from './server'\nimport url from './serverAPI.config'\nimport {Base64Encoder} from '../utils/Base64Encoder'\n\n//Login\nexport const Login = (data) =>{\n    return server({\n        url: url.Login,\n        method: \"POST\",\n        data :data\n    })\n};\nexport const ChangePassWord=(data,id)=>{\n    return server({\n        url:url.CHANGEPASSWORD(id),\n        method:'POST',\n        data:data,\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n}\n\n\nexport const GetLottery = () =>{\n    return server({\n        url: url.GetLottery,\n        method: 'GET',\n    })\n};\n\nexport const DeleteLottery = (id) =>{\n    return server({\n        url: url.DeleteLottery(id),\n        method: \"DELETE\",\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n};\n\nexport const AddLottery = (data) =>{\n    return server({\n        url: url.AddLottery,\n        method: \"POST\",\n        data: data,\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n};\n\nexport const UpdateLottery = (id,data) =>{\n    return server({\n        url: url.UpdateLottery(id),\n        method: \"PUT\",\n        data: data,\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n};\n\nexport const GetWebClient = () =>{\n    return server({\n        url: url.GetWebClient,\n        method: \"GET\",\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n};\n\nexport const DeleteWebClient = (id) =>{\n    return server({\n        url: url.DeleteWebClient(id),\n        method: \"Delete\",\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n};\n\nexport const TokenValidate = () =>{\n    return server({\n        url: url.TokenValidate,\n        method: \"GET\",\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n};\n\nexport const GetLocalClient = () =>{\n    return server({\n        url: url.GetLocalClient,\n        method: \"GET\",\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n};\n\nexport const DeleteLocalClient =(id) =>{\n    return server({\n        url: url.DeleteLocalClient(id),\n        method: \"DELETE\",\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n}\n\nexport const UpdateLocalClient = (id,data) =>{\n    return server({\n        url: url.UpdateLocalClient(id),\n        method: \"PUT\",\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        },\n        data:data\n    })\n};\n\nexport const AddLocalClient = (data) =>{\n    return server({\n        url: url.AddLocalClient,\n        method: \"POST\",\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        },\n        data:data\n    })\n};\n\nexport const GetStaff = () =>{\n    return server({\n        url: url.GetStaff,\n        method: \"GET\",\n    })\n};\n\nexport const UpdateStaff = (id,data) =>{\n    return server({\n        url: url.UpdateStaff(id),\n        method: 'PUT',\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        },\n        data:data\n    })\n};\n\nexport const GetBrands = () =>{\n    return server({\n        url: url.GetBrands,\n        method:\"GET\",\n    })\n};\n\nexport const PostBrands = (data) =>{\n    return server({\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        },\n        url: url.PostBrands,\n        method: \"POST\",\n        data: data\n    })\n};\n\nexport const GetProductCategory = () =>{\n    return server({\n        method: \"GET\",\n        url: url.GetProductCategory\n    })\n};\n\nexport const UploadImage = () =>{\n    return url.UploadImage\n}\n\nexport const UpdateProductCategory = (id,data) =>{\n    return server({\n        method: \"PUT\",\n        url: url.UpdateProductCategory(id),\n        data: data,\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n};\n\nexport const FirstProductCategory = (id) =>{\n    return server({\n        method:\"GET\",\n        url: url.FirstProductCategory(id),\n    })\n};\n\nexport const DeleteBrand = (id) =>{\n    return server({\n        method: 'DELETE',\n        url: url.DeleteBrand(id),\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n};\n\nexport const UpdateBrand = (id,data) =>{\n    return server({\n        method: \"PUT\",\n        url: url.UpdateBrand(id),\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        },\n        data:data\n    })\n};\n\nexport const GetProductsById = (id) =>{\n    return server({\n        method: 'GET',\n        url: url.GetProducts(id)\n    })\n};\n\nexport const AddProduct = (data) =>{\n    return server({\n        method: \"POST\",\n        data:data,\n        url: url.AddProduct,\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        },\n    })\n};\n\nexport const UpdateProduct = (id,data)=>{\n    return server({\n        method: \"PUT\",\n        data:data,\n        url: url.UpdateProduct(id),\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n}\n\nexport const AddStaff = (data) =>{\n    return server({\n        method: \"POST\",\n        url: url.AddStaff,\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        },\n        data:data,\n    })\n}\n\nexport const DeleteStaff = (id) =>{\n    return server({\n        method: \"DELETE\",\n        url: url.DeleteStaff(id),\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n}\n\nexport const DeleteProduct = (id) =>{\n    return server({\n        method: \"DELETE\",\n        url: url.DeleteProduct(id),\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n};\n\nexport const AddNews = (data) =>{\n    return server({\n        method:\"POST\",\n        url: url.AddNews,\n        data:data,\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n}\n\nexport const GetNews = () =>{\n    return server({\n        method: \"GET\",\n        url: url.GetNews\n    })\n}\n\nexport const DeleteNews = (id) =>{\n    return server({\n        method: \"DELETE\",\n        url: url.DeleteNews(id),\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n}\n\nexport const GetNewsContent = (id) =>{\n    return server({\n        method: \"GET\",\n        url: url.GetsNewsContent(id),\n    })\n};\n\nexport const UpdateNews = (data) =>{\n    return server({\n        method: \"PUT\",\n        data:data,\n        url: url.UpdateNews,\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n}\n\nexport const GetAbout = () =>{\n    return server({\n        method:\"GET\",\n        url: url.GetAbout\n    })\n}\n\nexport const AddAbout = (data) =>{\n    return server({\n        method: \"POST\",\n        url: url.PostAbout,\n        data:data,\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n}\n\nexport const DeleteAbout = (id) =>{\n    return server({\n        method: \"DELETE\",\n        url: url.DeleteAbout(id),\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n}\n\nexport const UpdateAbout = (id,data) =>{\n    return server({\n        method: \"PUT\",\n        url: url.UpdateAbout(id),\n        data: data,\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n}\n\nexport const SendEmailToLocalClient = (data) =>{\n    return server({\n        method: 'POST',\n        url: url.SendEmailToLocalClient,\n        data: data,\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n}\n\nexport const SendTestEmailToPeople = (data) =>{\n    return server({\n        method: \"POST\",\n        url: url.SendTestEmailToPeople,\n        data:data,\n        headers: {\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n}\n\nexport const GetLocalClientByPageNumber = (num) =>{\n    return server({\n        method: \"GET\",\n        url: url.GetLocalClientByPageNumber(num),\n        headers:{\n            Authorization: ' Basic '+ Base64Encoder(localStorage.getItem('token'))\n        }\n    })\n}\n","import React,{Component} from 'react'\nimport classes from './Login.css'\nimport {Form,Icon, Input, Button,Typography } from 'antd';\nimport {Login} from '../../api/api'\nimport {withRouter} from 'react-router-dom';\n\nclass LoginForm extends Component{\n\n    constructor(props) {\n        super(props);\n        const token = localStorage.getItem(\"token\");\n        if (token){\n            window.location = '/dashboard'\n        }\n    }\n\n    state= {\n        height: window.innerHeight,\n        isRedirect: false\n    };\n\n    componentDidMount = () =>{\n        window.addEventListener(\"resize\",()=>{\n            this.setState({\n                height: window.innerHeight\n            })\n        })\n    };\n\n    componentWillUnmount = () => {\n        window.removeEventListener('resize',()=>{\n            console.log(\"window resize event removed\")\n        })\n    };\n\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                let formData = new FormData();\n                formData.append(\"username\",values.username)\n                formData.append(\"password\",values.password)\n                Login(formData).then(res=>{\n                    localStorage.setItem(\"token\", res.data.token)\n                    localStorage.setItem(\"name\", res.data.user_name)\n                    localStorage.setItem('user_id',res.data.user_id)\n                    window.location = '/dashboard'\n                }).catch(error=>{\n                    alert(error.error_message)\n\n                })\n            }\n        });\n    };\n    render() {\n            const { getFieldDecorator } = this.props.form;\n            const {height} = this.state\n            return (\n                <div style={{height:height }} className={classes.login}>\n                    <div className={classes.loginForm}>\n                        <Typography.Title style={{textAlign:\"center\"}} level={4}>Thriving Building System</Typography.Title>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Item>\n                                {getFieldDecorator('username', {\n                                    rules: [{ required: true, message: 'Please input your username!' }],\n                                })(\n                                    <Input\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                        placeholder=\"Username\"\n                                    />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('password', {\n                                    rules: [{ required: true, message: 'Please input your Password!' }],\n                                })(\n                                    <Input\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                        type=\"password\"\n                                        placeholder=\"Password\"\n                                    />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"loginFormButton\">\n                                    Log in\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n            );\n        }\n}\nconst LoginTemplate = Form.create({ name: 'normal_login' })(LoginForm);\nexport default withRouter(LoginTemplate)\n","import React from 'react'\nimport { Result, Button } from 'antd';\n\nconst NotFound = () =>{\n    return (\n        <div>\n            This page does not exist.\n        </div>\n    )\n}\nexport default NotFound\n","import React from 'react';\nimport {Route,Redirect} from 'react-router-dom';\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            localStorage.getItem(\"token\") ?\n                (\n                    <Component {...props} />\n                )\n                : <Redirect to='/login' />\n        }\n    />\n);\n\n\n\nexport default PrivateRoute;\n","import React,{Component} from 'react';\n\nconst ComponentWithParameter = (Wrapper,method,pos,name) =>{\n    return class extends Component{\n\n        componentDidMount = () =>{\n            method(pos)\n        }\n\n        render(){\n            return (\n                <Wrapper\n                    {...this.props}\n                    name={name}\n                />\n            )\n        }\n    }\n};\n\n\nexport default ComponentWithParameter\n","import React,{Component} from 'react'\n\n\nclass DashboardRedirect extends Component{\n    componentDidMount = () => {\n        this.props.history.push('/dashboard/home')\n    };\n    render(){\n        return (\n            <div/>\n        )\n    }\n}\n\n\nexport default DashboardRedirect\n","import React from 'react'\nimport { Modal,Typography } from 'antd';\n\nconst LogoutModal = (props) =>{\n\n    return (\n        <Modal\n            title=\"Log out Confirmation\"\n            visible={props.visible}\n            onOk={props.confirm}\n            onCancel={props.hideModal}\n            okText=\"Confirm\"\n            cancelText=\"Cancel\"\n        >\n            <Typography.Title level={3}>Are sure to log out</Typography.Title>\n        </Modal>\n    )\n}\n\nexport default LogoutModal\n","import React,{Component,Fragment} from 'react'\nimport { Layout,Row,Col,Avatar,Icon,Menu,Dropdown } from 'antd';\nimport {withRouter} from 'react-router-dom'\nimport classes from './DashboardBody.css'\nimport LogoutModal from \"../../UI/LogoutModal/LogoutModal\";\n\nconst { Header, Content } = Layout;\n\n\nclass DashboardBody extends Component{\n    state = {\n        logoutModalVisible: false\n    }\n\n    openLogoutModal = () =>{\n        this.setState({\n            logoutModalVisible: true\n        })\n    }\n\n    DropDownMenu = (\n        <Menu>\n            <Menu.Item key=\"0\">\n                <a onClick={()=>{this.props.history.push('/dashboard/changepassword')}}>Change Password</a>\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item key=\"3\" onClick={this.openLogoutModal}>Log Out</Menu.Item>\n        </Menu>\n    )\n\n    hideLogoutModal = () =>{\n        this.setState({\n            logoutModalVisible: false\n        })\n    }\n\n    LogoutHandler = () =>{\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem('name')\n        localStorage.removeItem('user_id')\n        window.location = \"/login\"\n    };\n\n    render(){\n        return (\n            <Fragment>\n                <Header style={{ background: '#fff'}} >\n                    <h1 style={{float:\"left\",display:\"inline-block\"}}>{this.props.title}</h1>\n                    <div style={{float:\"right\",display:\"inline-block\"}}>\n                        <Dropdown overlay={this.DropDownMenu} trigger={['click']}>\n                            <div className={classes.user}>\n                                <Avatar icon=\"user\" /> {localStorage.getItem(\"name\")} <Icon type=\"down\" />\n                            </div>\n                        </Dropdown>\n                    </div>\n\n                </Header>\n                <Content style={{ margin: '24px 16px 0', overflow: 'initial' }}>\n                    <div style={{ padding: 24, background: '#fff',minHeight:\"82vh\" }}>\n                        {this.props.children}\n                    </div>\n                </Content>\n                <LogoutModal hideModal={this.hideLogoutModal} confirm={this.LogoutHandler} visible={this.state.logoutModalVisible}/>\n            </Fragment>\n        )\n    }\n}\n\nexport default withRouter(DashboardBody)\n","import {ChartCard,Field,yuan} from 'ant-design-pro/lib/Charts'\nimport Trend from 'ant-design-pro/lib/Trend'\nimport {Icon,Tooltip} from 'antd'\nimport numeral from 'numeral';\nimport React,{Component} from 'react'\n\nclass SaleGraph extends Component{\n    render(){\n        return (\n            <ChartCard\n                title=\"销售额\"\n                action={\n                    <Tooltip title=\"指标说明\">\n                        <Icon type=\"info-circle-o\" />\n                    </Tooltip>\n                }\n                total={() => <span dangerouslySetInnerHTML={{ __html: yuan(126560) }} />}\n                footer={<Field label=\"日均销售额\" value={numeral(12423).format('0,0')} />}\n                contentHeight={46}\n            >\n                            <span>\n                              周同比\n                              <Trend flag=\"up\" style={{ marginLeft: 8, color: 'rgba(0,0,0,.85)' }}>\n                                12%\n                              </Trend>\n                            </span>\n                <span style={{ marginLeft: 16 }}>\n                              日环比\n                              <Trend flag=\"down\" style={{ marginLeft: 8, color: 'rgba(0,0,0,.85)' }}>\n                                11%\n                              </Trend>\n                            </span>\n            </ChartCard>\n        )\n    }\n}\n\n\nexport default SaleGraph\n","import { Bar } from 'ant-design-pro/lib/Charts';\nimport React from 'react'\nconst salesData = [];\nfor (let i = 0; i < 12; i += 1) {\n    salesData.push({\n        x: `${i + 1}月`,\n        y: Math.floor(Math.random() * 1000) + 200,\n    });\n}\n\nconst BarGraph = () => <Bar height={200} title=\"销售额趋势\" data={salesData} />\nexport default BarGraph\n","import { TimelineChart } from 'ant-design-pro/lib/Charts';\nimport React from 'react'\nconst chartData = [];\nfor (let i = 0; i < 20; i += 1) {\n    chartData.push({\n        x: new Date().getTime() + 1000 * 60 * 30 * i,\n        y1: Math.floor(Math.random() * 100) + 1000,\n        y2: Math.floor(Math.random() * 100) + 10,\n    });\n}\n\nconst TimeLineGraph = () =>{\n    return (\n        <TimelineChart height={200} data={chartData} titleMap={{ y1: '客流量', y2: '支付笔数' }} />\n    )\n};\n\n\nexport default TimeLineGraph\n","import React,{Component} from 'react'\nimport DashboardBody from \"../../../components/common/DashboardBody/DashboardBody\";\nimport {Row,Col} from 'antd'\nimport SaleGraph from \"../../../components/graph/SaleGraph\";\nimport ProductNumGraph from \"../../../components/graph/ProductNumGraph\";\nimport BarGraph from \"../../../components/graph/BarGraph\";\nimport TimeLineGraph from \"../../../components/graph/TimeLineGraph\";\nclass Home extends Component{\n    render(){\n        return (\n            <DashboardBody title={this.props.name}>\n                <div>\n                    <Row type=\"flex\" justify=\"space-between\">\n                        <Col span={5}>\n                            <SaleGraph/>\n                        </Col>\n                        <Col span={5}>\n                            <SaleGraph/>\n                        </Col>\n                        <Col span={5}>\n                            <SaleGraph/>\n                        </Col>\n                        <Col span={5}>\n                            <ProductNumGraph/>\n                        </Col>\n                        <Col style={{marginTop: 20}} span={24}>\n                            <BarGraph/>\n                        </Col>\n                        <Col style={{marginTop: 20}} span={24}>\n                            <TimeLineGraph/>\n                        </Col>\n                    </Row>\n\n                </div>\n            </DashboardBody>\n        )\n    }\n\n}\nexport default Home\n","import React, {useState} from 'react'\nimport { Modal, Button,Form,Select,Input} from 'antd';\nimport {AddLottery} from '../../../api/api'\nimport {connect} from 'react-redux'\nimport {SetData} from \"../../../redux/actions/lotteryAction\";\nconst { Option } = Select;\n\nconst AddLotteryForm = (props) =>{\n    const { getFieldDecorator } = props.form;\n\n    const SubmitHandler = (e) => {\n        props.submit(e, () => {\n            props.form.validateFields((err, values) => {\n                if (!err) {\n                    let data = new FormData()\n                    data.append(\"name\",values.name)\n                    data.append(\"gender\",values.gender)\n                    data.append(\"phone\",values.phone)\n                    props.setIsLoading(true)\n                    AddLottery(data).then(res=>{\n                        props.setIsLoading(false)\n                        setTimeout(()=>{\n                            props.closeModal()\n                            props.SetData(res.data)\n                        },300)\n\n                    }).catch(error=>{\n                        alert(\"Server Error\")\n                    })\n                }\n            })\n        })\n    }\n    return (\n        <Form onSubmit={SubmitHandler}>\n            <Form.Item label=\"name\">\n                {getFieldDecorator('name', {\n                    rules: [{ required: true, message: 'Please enter the name!' }],\n                })(<Input placeholder=\"name ...\"/>)}\n            </Form.Item>\n            <Form.Item label=\"phone\">\n                {getFieldDecorator('phone', {\n                    rules: [{ required: true, message: 'Please enter the phone!' },{min:7, message: \"Phone number doesn't less than 7 digits\"}],\n                })(<Input placeholder=\"phone number ...\"/>)}\n            </Form.Item>\n            <Form.Item label=\"gender\">\n                {getFieldDecorator('gender', {\n                    rules: [{ required: true, message: 'Please select the gender!' }],\n                })(\n                    <Select>\n                        <Option value=\"0\">male</Option>\n                        <Option value=\"1\">female</Option>\n                    </Select>\n                )}\n            </Form.Item>\n            <Form.Item>\n                <Button key=\"back\" style={{marginRight:\"10px\"}} onClick={props.closeModal}>\n                    Cancel\n                </Button>\n                <Button htmlType=\"submit\" type=\"primary\" loading={props.isLoading}>\n                    Submit\n                </Button>\n            </Form.Item>\n\n        </Form>\n    )\n};\n\n\n\nconst mapStateToProps = state => {\n    return {\n        lotteryData: state.lotteryReducer\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        SetData: (value) =>{\n            dispatch(SetData(value))\n        }\n    }\n};\n\nconst AddLotteryFormTemplate = Form.create({ name: 'normal_login' })(connect(mapStateToProps,mapDispatchToProps)(AddLotteryForm));\n\nconst LotteryAddModal = (props) =>{\n    const HandleOk = (e,cb) =>{\n        e.preventDefault()\n        cb()\n    };\n\n    const [isLoading,setIsLoading] = useState(false);\n\n    return (\n        <Modal\n            visible={props.visible}\n            title=\"Add Lottery\"\n            onOk={HandleOk}\n            onCancel={props.closeModal}\n            footer={[]}\n        >\n            <AddLotteryFormTemplate isLoading={isLoading} submit={HandleOk} setIsLoading={setIsLoading} closeModal={props.closeModal}/>\n        </Modal>\n    )\n}\n\nexport default LotteryAddModal\n","export const SetData = (data) =>{\n    return {\n        type: 'setData',\n        payload: data\n    }\n};\n","import {Table, Input, Popconfirm, Form, Button, Select} from 'antd';\nimport React,{Fragment} from 'react'\nimport DashboardBody from \"../../../components/common/DashboardBody/DashboardBody\";\nimport {DeleteLottery, GetLottery,UpdateLottery} from \"../../../api/api\";\nimport LotteryAddModal from \"../../../components/UI/LotteryAddModal/LotteryAddModal\";\nimport {connect} from 'react-redux'\nconst { Option } = Select;\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n    getInput = () => {\n        if (this.props.inputType === 'select') {\n            return (\n                <Select>\n                    <Option value=\"0\">male</Option>\n                    <Option value=\"1\">female</Option>\n                </Select>\n            );\n        }\n        return <Input />;\n    };\n\n    renderCell = ({ getFieldDecorator }) => {\n        const {\n            editing,\n            dataIndex,\n            title,\n            inputType,\n            record,\n            index,\n            children,\n            ...restProps\n        } = this.props;\n        return (\n            <td {...restProps}>\n                {editing ? (\n                    <Form.Item style={{ margin: 0 }}>\n                        {getFieldDecorator(dataIndex, {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: `Please Input ${title}!`,\n                                },\n                            ],\n                            initialValue: record[dataIndex],\n                        })(this.getInput())}\n                    </Form.Item>\n                ) : (\n                    children\n                )}\n            </td>\n        );\n    };\n\n    render() {\n        return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\n    }\n}\n\nclass EditableTable extends React.Component {\n\n    componentWillUnmount =()=> {\n        this.setState = (state) =>{\n            return;\n        }\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            loading: true\n        })\n        GetLottery().then(res=>{\n            this.setState({\n                loading: false\n            },()=>{\n                this.setState({data:\n                        res.data.map((s)=>{\n                            return (\n                                {name: s.name, phone:s.phone, gender: s.gender,key: s._id.$oid}\n                            )\n                        })\n                })\n            })\n        }).catch(err=>{\n            this.setState({\n                loading: false\n            })\n            alert(\"Server Error\")\n        })\n\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps.lotteryData !== this.props.lotteryData){\n            this.setState({\n                data: nextProps.lotteryData.map((s)=>{\n                    return (\n                        {name: s.name, phone:s.phone, gender: s.gender,key: s._id.$oid}\n                    )\n                })})\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data:[],\n            modalVisible: false,\n            editingKey: '',\n            loading: false\n        };\n        this.columns = [\n            {\n                title: 'name',\n                dataIndex: 'name',\n                editable: true,\n            },\n            {\n                title: 'phone',\n                dataIndex: 'phone',\n                editable: true,\n            },\n            {\n                title: 'gender',\n                dataIndex: 'gender',\n                editable: true,\n            },\n            {\n                title: 'operation',\n                dataIndex: 'operation',\n                render: (text, record) => {\n                    const { editingKey } = this.state;\n                    const editable = this.isEditing(record);\n                    return editable ? (\n                        <span>\n                            <EditableContext.Consumer>\n                                {form => (\n                                    <a\n                                        onClick={() => this.save(form, record.key)}\n                                        style={{ marginRight: 8 }}\n                                    >\n                                        Save\n                                    </a>\n                                )}\n                            </EditableContext.Consumer>\n                            <Popconfirm title=\"Sure to cancel?\" onConfirm={() => this.cancel(record.key)}>\n                                <a>Cancel</a>\n                            </Popconfirm>\n                        </span>\n                    ) : (\n                        <Fragment>\n                            <a style={{marginRight: '10px'}} disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>\n                                Edit\n                            </a>\n                            <Popconfirm title=\"Sure to Delete?\" onConfirm={() =>this.DeleteHandler(record.key)}>\n                                <a disabled={editingKey !== ''}>\n                                    Delete\n                                </a>\n                            </Popconfirm>\n                        </Fragment>\n                    );\n                },\n            },\n        ];\n    }\n\n    isEditing = record => record.key === this.state.editingKey;\n\n    DeleteHandler = (id) =>{\n        this.setState({loading:true})\n        DeleteLottery(id).then(res=>{\n            this.setState({loading:false},()=>{\n                this.setState({\n                    data: res.data.map((s)=>{\n                        return (\n                            {name: s.name, phone:s.phone, gender: s.gender,key: s._id.$oid}\n                        )\n                    })\n                })\n            })\n\n        }).catch(err=>{\n            this.setState({loading:false})\n            alert(\"delete Fail, Plz try it later\")\n        })\n    }\n\n    cancel = () => {\n        this.setState({ editingKey: '' });\n    };\n\n    save(form, key) {\n        form.validateFields((error, row) => {\n            if (error) {\n                return;\n            }\n            const fdata = new FormData();\n            fdata.append('name',row.name)\n            fdata.append('phone',row.phone)\n            fdata.append('gender',row.gender)\n            this.setState({loading:true})\n            UpdateLottery(key,fdata).then(res=>{\n                this.setState({loading:false},()=>{\n                    this.setState({\n                        data: res.data.map((s)=>{\n                            return (\n                                {name: s.name, phone:s.phone, gender: s.gender,key: s._id.$oid}\n                            )\n                        }),\n                        editingKey: ''\n                    });\n                })\n\n            }).catch(err=>{\n                this.setState({loading:false})\n                console.log(err)\n            })\n        });\n    }\n\n    edit(key) {\n        this.setState({ editingKey: key });\n    }\n    openLotteryAddModal = () =>{\n        this.setState({modalVisible: true})\n    }\n\n    closeLotteryAddModal = () =>{\n        this.setState({modalVisible:false})\n    }\n    render() {\n        const components = {\n            body: {\n                cell: EditableCell,\n            },\n        };\n\n        const columns = this.columns.map(col => {\n            if (!col.editable) {\n                return col;\n            }\n            return {\n                ...col,\n                onCell: record => ({\n                    record,\n                    inputType: col.dataIndex === 'gender' ? 'select' : 'text',\n                    dataIndex: col.dataIndex,\n                    title: col.title,\n                    editing: this.isEditing(record),\n                }),\n            };\n        });\n\n\n\n        return (\n            <EditableContext.Provider value={this.props.form}>\n                <Button onClick={this.openLotteryAddModal} type=\"primary\" style={{ marginBottom: 16 }}>\n                    Add a row\n                </Button>\n                <LotteryAddModal closeModal={this.closeLotteryAddModal} visible={this.state.modalVisible}/>\n                <Table\n                    loading={this.state.loading}\n                    components={components}\n                    bordered\n                    dataSource={this.state.data}\n                    columns={columns}\n                    rowClassName=\"editable-row\"\n                    pagination={{\n                        onChange: this.cancel,\n                    }}\n                />\n            </EditableContext.Provider>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        lotteryData: state.lotteryReducer\n    }\n};\n\nconst LotteryTable = Form.create()(connect(mapStateToProps)(EditableTable));\n\nconst LotteryManagement = (props) =>{\n    return (\n        <DashboardBody title={props.name}>\n            <div>\n                <LotteryTable/>\n            </div>\n        </DashboardBody>\n    )\n}\nexport default LotteryManagement\n","export const Decoder = (encryptionId) =>{\n    return new Date(parseInt(encryptionId.substring(0, 8), 16) * 1000);\n}\n\n","import React,{Component} from 'react'\nimport DashboardBody from \"../../../components/common/DashboardBody/DashboardBody\";\nimport {Button, Popconfirm, Table} from 'antd';\nimport {GetWebClient,DeleteWebClient} from '../../../api/api'\nimport {Decoder} from \"../../../utils/ObjectIdDecoder\";\nimport moment from 'moment'\n\nclass WebClient extends Component{\n\n\n    DeleteHandler = (row) =>{\n        this.setState({isLoading:true})\n        DeleteWebClient(row._id.$oid).then(res=>{\n            this.setState({isLoading:false},()=>{\n                this.setState({\n                    clients: res.data.map((s,i)=>{\n                        s.key = i.toString()\n                        return s\n                    })\n                })\n            })\n        }).catch(err=>{\n            this.setState({isLoading:false})\n            console.log(err)\n        })\n    };\n\n\n\n    columns = [\n        { title: 'Name', dataIndex: 'name', key: 'name' },\n        { title: 'Phone', dataIndex: 'phone', key: 'phone' },\n        { title: 'Email', dataIndex: 'email', key: 'email' },\n        { title: \"Date\", dataIndex: 'date', key: 'date'},\n        {\n            title: 'Action',\n            dataIndex: '',\n            key: 'x',\n            render: (row) => (\n                <Popconfirm title=\"Sure to Delete?\" onConfirm={() =>this.DeleteHandler(row)}>\n                    <a>\n                        Delete\n                    </a>\n                </Popconfirm>\n            ),\n        },\n    ];\n\n    state={\n        clients: [],\n        isLoading: false\n    };\n\n    componentDidMount = () =>{\n        this.FetchClients()\n    }\n\n    FetchClients = () =>{\n        this.setState({\n            isLoading:true\n        },()=>{\n            GetWebClient().then(res=>{\n                this.setState({\n                    clients: res.data.map((s,i)=>{\n                        s.key = i.toString()\n                        s.date = moment(Decoder(s._id.$oid)).format('MMMM Do YYYY, h:mm:ss a')\n                        return s\n                    }),\n                    isLoading: false\n                })\n            }).catch(err=>{\n                console.log(err);\n                this.setState({\n                    isLoading: false\n                })\n            })\n        })\n    };\n\n    render(){\n        return (\n\n            <DashboardBody title={this.props.name}>\n                <div>\n                    <Button loading={this.state.isLoading} disabled={this.state.isLoading} onClick={this.FetchClients} type=\"primary\" style={{ marginBottom: 16 }}>\n                        Refresh\n                    </Button>\n                    <Table\n                        loading={this.state.isLoading}\n                        columns={this.columns}\n                        expandedRowRender={record => <p style={{ margin: 0 }}>{record.message}</p>}\n                        dataSource={this.state.clients}\n                    />\n                </div>\n            </DashboardBody>\n        )\n    }\n}\n\nexport default WebClient\n\n\n\n\n","import React, {useState} from 'react'\nimport { Modal, Button,Form,Select,Input} from 'antd';\nimport {AddLocalClient} from '../../../api/api'\nimport {connect} from 'react-redux'\nimport {SetData} from \"../../../redux/actions/localClientAction\";\n\nconst AddLotteryForm = (props) =>{\n    const { getFieldDecorator } = props.form;\n\n    const SubmitHandler = (e) => {\n        props.submit(e, () => {\n            props.form.validateFields((err, values) => {\n                if (!err) {\n                    let data = new FormData()\n                    data.append(\"name\",values.name)\n                    data.append(\"address\",values.address)\n                    data.append(\"phone\",values.phone)\n                    data.append(\"email\",values.email)\n                    props.setIsLoading(true);\n                    AddLocalClient(data).then(res=>{\n                        props.setIsLoading(false)\n                        setTimeout(()=>{\n                            props.closeModal()\n                            props.refreshPage()\n                        },300)\n\n                    }).catch(error=>{\n                        alert(\"Server Error\")\n                    })\n                }\n            })\n        })\n    }\n    return (\n        <Form onSubmit={SubmitHandler}>\n            <Form.Item label=\"name\">\n                {getFieldDecorator('name', {\n                    rules: [{ required: true, message: 'Please enter the name!' }],\n                })(<Input placeholder=\"name ...\"/>)}\n            </Form.Item>\n            <Form.Item label=\"phone\">\n                {getFieldDecorator('phone', {\n                    rules: [{ required: true, message: 'Please enter the phone!' },{min:7, message: \"Phone number doesn't less than 7 digits\"}],\n                })(<Input placeholder=\"phone number ...\"/>)}\n            </Form.Item>\n            <Form.Item label=\"address\">\n                {getFieldDecorator('address', {\n                    rules: [{ required: true, message: 'Please enter the address!' }],\n                })(\n                    (<Input placeholder=\"address ...\"/>)\n                )}\n            </Form.Item>\n            <Form.Item label=\"email\">\n                {getFieldDecorator('email', {\n                    rules: [{ required: true, message: 'Please enter the email!' }],\n                })(\n                    (<Input placeholder=\"email ...\"/>)\n                )}\n            </Form.Item>\n\n            <Form.Item>\n                <Button style={{marginRight:\"10px\"}} key=\"back\" onClick={props.closeModal}>\n                    Cancel\n                </Button>\n                <Button htmlType=\"submit\" type=\"primary\" loading={props.isLoading}>\n                    Submit\n                </Button>\n            </Form.Item>\n\n        </Form>\n    )\n};\n\n\n\nconst mapStateToProps = state => {\n    return {\n        localClientData: state.localClientReducer\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        SetData: (value) =>{\n            dispatch(SetData(value))\n        }\n    }\n};\n\nconst AddLotteryFormTemplate = Form.create({ name: 'normal_login' })(connect(mapStateToProps,mapDispatchToProps)(AddLotteryForm));\n\nconst LocalClientAddModal = (props) =>{\n    const HandleOk = (e,cb) =>{\n        e.preventDefault()\n        cb()\n    };\n\n    const [isLoading,setIsLoading] = useState(false);\n\n    return (\n        <Modal\n            visible={props.visible}\n            title=\"Add Local Client\"\n            onOk={HandleOk}\n            onCancel={props.closeModal}\n            footer={[]}\n        >\n            <AddLotteryFormTemplate refreshPage={props.refreshPage} isLoading={isLoading} submit={HandleOk} setIsLoading={setIsLoading} closeModal={props.closeModal}/>\n        </Modal>\n    )\n};\n\nexport default LocalClientAddModal\n","export const SetData = (data) =>{\n    return {\n        type: 'setData',\n        payload: data\n    }\n};\n","import {Table, Input, Popconfirm, Form, Button} from 'antd';\nimport React,{Fragment} from 'react'\nimport DashboardBody from \"../../../components/common/DashboardBody/DashboardBody\";\nimport {DeleteLocalClient, GetLocalClientByPageNumber, UpdateLocalClient} from \"../../../api/api\";\nimport {connect} from 'react-redux'\nimport LocalClientAddModal from \"../../../components/UI/LocalClientAddModal/LocalClientAddModal\";\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n    getInput = () => {\n        return <Input />;\n    };\n\n    renderCell = ({ getFieldDecorator }) => {\n        const {\n            editing,\n            dataIndex,\n            title,\n            inputType,\n            record,\n            index,\n            children,\n            ...restProps\n        } = this.props;\n        return (\n            <td {...restProps}>\n                {editing ? (\n                    <Form.Item style={{ margin: 0 }}>\n                        {getFieldDecorator(dataIndex, {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: `Please Input ${title}!`,\n                                },\n                            ],\n                            initialValue: record[dataIndex],\n                        })(this.getInput())}\n                    </Form.Item>\n                ) : (\n                    children\n                )}\n            </td>\n        );\n    };\n\n    render() {\n        return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\n    }\n}\n\nclass EditableTable extends React.Component {\n    componentDidMount() {\n        this.setState({\n            loading: true\n        })\n        GetLocalClientByPageNumber(this.state.current_page_num).then(res=>{\n            this.setState({\n                loading: false\n            },()=>{\n                this.setState({\n                    data:\n                        res.data.data.map((s)=>{\n                            return (\n                                {name: s.name, phone:s.phone, address: s.address,email:s.email,key: s._id.$oid}\n                            )\n                        }),\n                    total: res.data.total\n                })\n            })\n        }).catch(err=>{\n            this.setState({\n                loading: false\n            })\n            alert(\"Server Error\")\n        })\n\n    }\n\n    componentWillUnmount = () => {\n        this.setState = (state) =>{\n            return;\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps.localClientData !== this.props.localClientData){\n            this.setState({\n                data: nextProps.localClientData.map((s)=>{\n                    return (\n                        {name: s.name, phone:s.phone, address: s.address,email:s.email,key: s._id.$oid}\n                    )\n                })})\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data:[],\n            modalVisible: false,\n            editingKey: '',\n            loading: false,\n            total: 1,\n            current_page_num: 1\n        };\n        this.columns = [\n            {\n                title: 'name',\n                dataIndex: 'name',\n                editable: true,\n            },\n            {\n                title: 'phone',\n                dataIndex: 'phone',\n                editable: true,\n            },\n            {\n                title: 'address',\n                dataIndex: 'address',\n                editable: true,\n            },\n            {\n                title: 'email',\n                dataIndex: 'email',\n                editable: true,\n            },\n            {\n                title: 'operation',\n                dataIndex: 'operation',\n                render: (text, record) => {\n                    const { editingKey } = this.state;\n                    const editable = this.isEditing(record);\n                    return editable ? (\n                        <span>\n                            <EditableContext.Consumer>\n                                {form => (\n                                    <a\n                                        onClick={() => this.save(form, record.key)}\n                                        style={{ marginRight: 8 }}\n                                    >\n                                        Save\n                                    </a>\n                                )}\n                            </EditableContext.Consumer>\n                            <Popconfirm title=\"Sure to cancel?\" onConfirm={() => this.cancel(record.key)}>\n                                <a>Cancel</a>\n                            </Popconfirm>\n                        </span>\n                    ) : (\n                        <Fragment>\n                            <a style={{marginRight: '10px'}} disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>\n                                Edit\n                            </a>\n                            <Popconfirm title=\"Sure to Delete?\" onConfirm={() =>this.DeleteHandler(record.key)}>\n                                <a disabled={editingKey !== ''}>\n                                    Delete\n                                </a>\n                            </Popconfirm>\n                        </Fragment>\n                    );\n                },\n            },\n        ];\n    }\n\n    isEditing = record => record.key === this.state.editingKey;\n\n    DeleteHandler = (id) =>{\n        this.setState({loading:true})\n        DeleteLocalClient(id).then(res=>{\n            if (this.state.data.length === 1){\n                this.setState({loading:false,current_page_num:this.state.current_page_num-1},()=>{\n                    this.refreshPage()\n                })\n            }else{\n                this.setState({loading:false},()=>{\n                    this.refreshPage()\n                })\n            }\n\n        }).catch(err=>{\n            this.setState({loading:false})\n            alert(\"delete Fail, Plz try it later\")\n        })\n    }\n\n    cancel = () => {\n        this.setState({ editingKey: '' });\n    };\n\n\n    pageChange = (page,size) =>{\n        this.setState({\n            loading: true\n        })\n        GetLocalClientByPageNumber(page).then(res=>{\n            this.setState({\n                loading: false\n            },()=>{\n                this.setState({\n                    data:\n                        res.data.data.map((s)=>{\n                            return (\n                                {name: s.name, phone:s.phone, address: s.address,email:s.email,key: s._id.$oid}\n                            )\n                        }),\n                    total: res.data.total,\n                    current_page_num: page,\n                    editingKey: '',\n                })\n            })\n        }).catch(err=>{\n            this.setState({\n                loading: false\n            })\n            alert(\"Server Error\")\n        })\n    }\n\n    save(form, key) {\n        form.validateFields((error, row) => {\n            if (error) {\n                return;\n            }\n            const fdata = new FormData();\n            fdata.append('name',row.name)\n            fdata.append('phone',row.phone)\n            fdata.append('address',row.address)\n            fdata.append('email',row.email)\n            this.setState({loading:true})\n            UpdateLocalClient(key,fdata).then(res=>{\n                this.setState({loading:false},()=>{\n                    this.setState({\n                        editingKey: ''\n                    },()=>{\n                        this.refreshPage()\n                    });\n                })\n\n            }).catch(err=>{\n                this.setState({loading:false})\n                console.log(err)\n            })\n        });\n    }\n\n    edit(key) {\n        this.setState({ editingKey: key });\n    }\n    openLotteryAddModal = () =>{\n        this.setState({modalVisible: true})\n    }\n\n    closeLotteryAddModal = () =>{\n        this.setState({modalVisible:false})\n    }\n\n\n    refreshPage = () =>{\n\n        this.setState({\n            loading: true\n        })\n        GetLocalClientByPageNumber(this.state.current_page_num).then(res=>{\n            this.setState({\n                loading: false\n            },()=>{\n                this.setState({\n                    data:\n                        res.data.data.map((s)=>{\n                            return (\n                                {name: s.name, phone:s.phone, address: s.address,email:s.email,key: s._id.$oid}\n                            )\n                        }),\n                    total: res.data.total,\n                })\n            })\n        }).catch(err=>{\n            this.setState({\n                loading: false\n            })\n            alert(\"Server Error\")\n        })\n    }\n\n    render() {\n        const components = {\n            body: {\n                cell: EditableCell,\n            },\n        };\n\n        const columns = this.columns.map(col => {\n            if (!col.editable) {\n                return col;\n            }\n            return {\n                ...col,\n                onCell: record => ({\n                    record,\n                    inputType: col.dataIndex === 'gender' ? 'select' : 'text',\n                    dataIndex: col.dataIndex,\n                    title: col.title,\n                    editing: this.isEditing(record),\n                }),\n            };\n        });\n\n\n\n        return (\n            <EditableContext.Provider value={this.props.form}>\n                <Button onClick={this.openLotteryAddModal} type=\"primary\" style={{ marginBottom: 16 }}>\n                    Add a row\n                </Button>\n                <LocalClientAddModal refreshPage={this.refreshPage} closeModal={this.closeLotteryAddModal} visible={this.state.modalVisible}/>\n                <Table\n                    loading={this.state.loading}\n                    components={components}\n                    bordered\n                    dataSource={this.state.data}\n                    columns={columns}\n                    rowClassName=\"editable-row\"\n                    pagination={{\n                        defaultPageSize: 10,\n                        onChange: this.pageChange,\n                        total: this.state.total,\n                        current: this.state.current_page_num\n                    }}\n                />\n            </EditableContext.Provider>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        localClientData: state.localClientReducer\n    }\n};\n\nconst LocalClientTable = Form.create()(connect(mapStateToProps)(EditableTable));\n\nconst LocalClient = (props) =>{\n    return (\n        <DashboardBody title={props.name}>\n            <div>\n                <LocalClientTable/>\n            </div>\n        </DashboardBody>\n    )\n}\nexport default LocalClient\n","import React,{Component} from 'react'\nimport {Modal,Form,Input,Upload,Icon,Button} from 'antd'\nimport {UpdateStaff, UploadImage} from '../../../api/api'\nimport {SetData} from \"../../../redux/actions/StaffInfoAction\";\nimport {connect} from 'react-redux'\nconst StaffEditModal = Form.create({name:\"staff_modal_form\"})(\n    class extends Component{\n\n        UNSAFE_componentWillReceiveProps = (nextProps) => {\n            if (nextProps.values !== this.props.values){\n                this.props.form.resetFields();\n            }\n        };\n\n        state={\n            wechatFileList:[],\n            imageFileList:[],\n            isLoading:false,\n        };\n\n\n        wechatFile = e => {\n            this.setState({\n                wechatFileList: e.fileList\n            });\n            if (Array.isArray(e)) {\n                return e;\n            }\n            return e && e.fileList;\n        };\n\n        imageFile = e => {\n            this.setState({\n                imageFileList: e.fileList\n            });\n            if (Array.isArray(e)) {\n                return e;\n            }\n            return e && e.fileList;\n        };\n\n\n        onCancel = () =>{\n            this.props.hideModal()\n        };\n\n\n\n        HandlerSubmit = (e)=>{\n            e.preventDefault();\n            this.props.form.validateFields((err, values) => {\n                if (!err){\n                    let fdata = new FormData();\n                    fdata.append('role',values.role);\n                    fdata.append('role_cn',values.role_cn);\n                    fdata.append('facebook',values.facebook);\n                    fdata.append('linkedin',values.linkedin);\n                    if (values.wechat.length !== 0){\n                        if (values.wechat[0].response.is_success){\n                            fdata.append(\"wechat\",values.wechat[0].response.data)\n                        }\n                    }else{\n                        fdata.append(\"wechat\",this.props.values.wechat)\n                    }\n\n                    if (values.image.length !== 0){\n                        if (values.image[0].response.is_success){\n                            fdata.append(\"image\",values.image[0].response.data)\n                        }\n                    }else{\n                        fdata.append(\"image\",this.props.values.image)\n                    }\n\n                    this.setState({isLoading:true})\n                    UpdateStaff(this.props.values.id,fdata).then(res=>{\n                        this.setState({isLoading:false},()=>{\n                            this.props.hideModalThenFetch()\n                        })\n                    }).catch(err=>{\n                        this.setState({isLoading:false});\n                    })\n\n                    this.setState({\n                        imageFileList:[],\n                        wechatFileList:[]\n                    })\n                }\n            })\n        };\n\n\n        render(){\n            const { form } = this.props;\n            const { getFieldDecorator } = form;\n            return (\n                <Modal\n                    visible={this.props.visible}\n                    title={`Edit ${this.props.values.name} Information`}\n                    okText=\"Update\"\n                    onCancel={()=>{\n                        this.onCancel()\n                        this.setState({\n                            imageFileList:[],\n                            wechatFileList:[]\n                        })\n                    }}\n                    onOk={this.HandlerSubmit}\n                    confirmLoading={this.state.isLoading}\n                    destroyOnClose={true}\n                >\n                    <Form layout=\"vertical\">\n                        <Form.Item label=\"role\">\n                            {getFieldDecorator('role', {\n                                initialValue: this.props.values.role\n                            })(<Input/>)}\n                        </Form.Item>\n                        <Form.Item  label=\"职位\">\n                            {getFieldDecorator('role_cn',{\n                                initialValue: this.props.values.role_cn\n                            })(<Input type=\"textarea\" />)}\n                        </Form.Item>\n                        <Form.Item label=\"facebook\">\n                            {getFieldDecorator('facebook',{\n                                initialValue: this.props.values.facebook\n                            })(<Input  />)}\n                        </Form.Item>\n                        <Form.Item label=\"linkedin\">\n                            {getFieldDecorator('linkedin',{\n                                initialValue: this.props.values.linkedin\n                            })(<Input  />)}\n                        </Form.Item>\n                        <Form.Item label=\"image\">\n                            {getFieldDecorator('image', {\n                                valuePropName: 'image',\n                                getValueFromEvent: this.imageFile,\n                                initialValue: []\n                            })(\n                                <Upload action={UploadImage} name=\"image\" listType=\"picture\">\n                                    {this.state.imageFileList.length===0?(<Button>\n                                        <Icon type=\"upload\" /> Click to upload\n                                    </Button>):null}\n                                </Upload>,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"wechat\">\n                            {getFieldDecorator('wechat', {\n                                valuePropName: 'wechat',\n                                getValueFromEvent: this.wechatFile,\n                                initialValue: []\n                            })(\n                                <Upload action={UploadImage} name=\"image\" listType=\"picture\">\n                                    {this.state.wechatFileList.length===0?(<Button>\n                                        <Icon type=\"upload\" /> Click to upload\n                                    </Button>):null}\n                                </Upload>,\n                            )}\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            )\n        }\n    }\n);\n\nconst mapStateToProps = state => {\n    return {\n        StaffInfoData: state.StaffInfoReducer\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        SetData: (value) =>{\n            dispatch(SetData(value))\n        }\n    }\n};\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(StaffEditModal)\n","export const SetData = (data) =>{\n    return {\n        type: 'setData',\n        payload: data\n    }\n};\n","import React,{Component} from 'react'\nimport {Modal,Form,Input,Upload,Icon,Button} from 'antd'\nimport {UploadImage} from '../../../api/api'\n\nconst StaffAddModal = Form.create({name:\"staff_add_modal\"})(\n    class extends Component{\n\n\n        state={\n            imageFileList:[],\n            wechatFileList:[]\n        };\n\n        imageFile = e => {\n            this.setState({\n                imageFileList: e.fileList\n            });\n            if (Array.isArray(e)) {\n                return e;\n            }\n            return e && e.fileList;\n        };\n\n\n        wechatFile = e =>{\n            this.setState({\n                wechatFileList: e.fileList\n            });\n            if (Array.isArray(e)) {\n                return e;\n            }\n            return e && e.fileList;\n        };\n\n\n\n        HandlerSubmit = (e)=>{\n            e.preventDefault();\n            this.props.form.validateFields((err, values) => {\n                if (!err){\n                    let fdata = new FormData()\n                    fdata.append('name',values.name)\n                    fdata.append('role',values.role)\n                    fdata.append('role_cn',values.role_cn)\n                    fdata.append('facebook',values.facebook)\n                    fdata.append('linkedin',values.linkedin)\n                    if (values.wechat.length !== 0){\n                        if (values.wechat[0].response.is_success){\n                            fdata.append(\"wechat\",values.wechat[0].response.data)\n                        }\n                    }else{\n                        fdata.append(\"wechat\",\"\")\n                    }\n\n                    if (values.image.length !== 0){\n                        if (values.image[0].response.is_success){\n                            fdata.append(\"image\",values.image[0].response.data)\n                        }\n                    }else{\n                        fdata.append(\"image\",\"\")\n                    }\n\n                    this.props.AddStaff(fdata,()=>{\n                        this.props.form.resetFields()\n                        this.props.hideModal()\n                    })\n\n                    this.setState({\n                        imageFileList:[],\n                        wechatFileList:[]\n                    })\n                }\n            })\n        };\n\n\n        render(){\n            const { form } = this.props;\n            const { getFieldDecorator } = form;\n            return (\n                <Modal\n                    visible={this.props.visible}\n                    title={`Add Staff`}\n                    okText=\"Add\"\n                    style={{top:30}}\n                    onCancel={()=>{\n                        this.props.hideModal()\n                        this.setState({\n                            imageFileList:[],\n                            wechatFileList:[]\n                        })\n                    }}\n                    destroyOnClose={true}\n                    onOk={this.HandlerSubmit}\n                    confirmLoading={this.props.isLoading}\n                >\n                    <Form layout=\"vertical\">\n                        <Form.Item label=\"name\">\n                            {getFieldDecorator('name', {\n                                rules: [{ required: true, message: 'Please enter the name!' }],\n                            })(<Input/>)}\n                        </Form.Item>\n                        <Form.Item label=\"role\">\n                            {getFieldDecorator('role', {\n                                rules: [{ required: true, message: 'Please enter the role!' }],\n                            })(<Input/>)}\n                        </Form.Item>\n                        <Form.Item  label=\"职位\">\n                            {getFieldDecorator('role_cn',{\n                                rules: [{ required: true, message: 'Please enter the 职位!' }],\n                            })(<Input type=\"textarea\" />)}\n                        </Form.Item>\n                        <Form.Item label=\"facebook\">\n                            {getFieldDecorator('facebook',{\n                                rules: [{ required: true, message: 'Please enter the facebook!' }],\n                            })(<Input  />)}\n                        </Form.Item>\n                        <Form.Item label=\"linkedin\">\n                            {getFieldDecorator('linkedin',{\n                                rules: [{ required: true, message: 'Please enter the linkedin!' }],\n                            })(<Input  />)}\n                        </Form.Item>\n                        <Form.Item label=\"image\">\n                            {getFieldDecorator('image', {\n                                valuePropName: 'image',\n                                getValueFromEvent: this.imageFile,\n                                initialValue: [],\n                                rules: [{ required: true, message: 'Please upload the image!' }],\n                            })(\n                                <Upload action={UploadImage} name=\"image\" listType=\"picture\">\n                                    {this.state.imageFileList.length===0?(<Button>\n                                        <Icon type=\"upload\" /> Click to upload\n                                    </Button>):null}\n                                </Upload>\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"wechat\">\n                            {getFieldDecorator('wechat', {\n                                valuePropName: 'wechat',\n                                getValueFromEvent: this.wechatFile,\n                                initialValue: [],\n                                rules: [{ required: true, message: 'Please upload the wechat QR code image!' }],\n                            })(\n                                <Upload action={UploadImage} name=\"image\" listType=\"picture\">\n                                    {this.state.wechatFileList.length===0?(<Button>\n                                        <Icon type=\"upload\" /> Click to upload\n                                    </Button>):null}\n                                </Upload>\n                            )}\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            )\n        }\n    }\n);\n\n\nexport default StaffAddModal\n\n\n","import React from 'react'\nimport { Modal,Typography } from 'antd';\n\nconst GeneralConfirmModal = (props) =>{\n\n    return (\n        <Modal\n            title={props.title}\n            visible={props.visible}\n            onOk={props.confirm}\n            onCancel={props.hideModal}\n            okText=\"Confirm\"\n            cancelText=\"Cancel\"\n            confirmLoading={props.isLoading}\n        >\n            <Typography.Title level={3}>{props.text}</Typography.Title>\n        </Modal>\n    )\n}\n\nexport default GeneralConfirmModal\n","import React, {Component,Fragment} from 'react'\nimport {GetStaff, AddStaff, DeleteStaff} from '../../../api/api'\nimport DashboardBody from \"../../../components/common/DashboardBody/DashboardBody\";\nimport {Descriptions, Spin, Button} from 'antd'\nimport classes from './StaffInfo.css'\nimport StaffEditModal from \"../../../components/UI/StaffEditModal/StaffEditModal\";\nimport {connect} from 'react-redux'\nimport StaffAddModal from \"../../../components/UI/StaffAddModal/StaffAddModal\";\nimport GeneralConfirmModal from \"../../../components/UI/GeneralConfirmModal/GeneralConfirmModal\";\n\nclass StaffInfo extends Component{\n    state={\n        data:[],\n        EditModalVisible: false,\n        propsToModal: {\n            name: \"\",\n            role: \"\",\n            role_cn:\"\",\n            facebook:\"\",\n            linkedin: \"\",\n            id:\"\",\n            wechat: \"\",\n            image: \"\",\n        },\n        isLoading:false,\n        AddModalVisible: false,\n        DeleteModalVisible: false,\n        DeletePerson: {\n            name: \"\",\n            id: \"\"\n        }\n    };\n\n    componentDidMount = () =>{\n        this.FetchStaff()\n    };\n\n    componentWillUnmount = ()=> {\n        this.setState = (state) =>{\n            return;\n        }\n    };\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps.StaffInfoData !== this.props.StaffInfoData){\n            this.setState({\n                data: nextProps.StaffInfoData\n            })\n        }\n    }\n\n    FetchStaff = () =>{\n        this.setState({isLoading: true})\n        GetStaff().then(res=>{\n            this.setState({isLoading: false},()=>{\n                this.setState({\n                    data: res.data\n                })\n            })\n        }).catch(err=>{\n            this.setState({isLoading: false})\n            console.log(err)\n        })\n    }\n\n    openEditModal = (obj) =>{\n        this.setState({\n            propsToModal: {\n                name: obj.name,\n                role: obj.role,\n                role_cn:obj.role_cn,\n                facebook: obj.facebook,\n                linkedin: obj.linkedin,\n                wechat: obj.wechat,\n                image: obj.image,\n                id: obj._id.$oid\n            }\n        },()=>{\n            this.setState({\n                EditModalVisible: true\n            })\n        })\n    };\n\n    hideEditModal = () =>{\n            this.setState({\n                EditModalVisible: false\n            })\n    }\n\n    hideEditModalThenFetch= () =>{\n        this.setState({\n            EditModalVisible: false\n        },()=>{\n            this.FetchStaff()\n        })\n    }\n\n    hideAddModal = () =>{\n        this.setState({\n            AddModalVisible: false\n        })\n    };\n\n\n    openAddModal = () =>{\n        this.setState({\n            AddModalVisible: true\n        })\n    };\n\n    AddStaffHandler = (data,cb) =>{\n        this.setState({isLoading:true})\n        AddStaff(data).then(res=>{\n            this.setState({isLoading:false,data: res.data},()=>{\n                cb()\n            })\n        }).catch(err=>{\n            console.log(err)\n        })\n    };\n\n\n    openDeleteModal = (obj) =>{\n       this.setState({\n           DeletePerson: {\n               name: obj.name,\n               id: obj._id.$oid\n           }\n       },()=>{\n           this.setState({\n               DeleteModalVisible: true\n           })\n       })\n    };\n\n    hideDeleteModal = () =>{\n        this.setState({\n            DeleteModalVisible: false\n        })\n    };\n\n    DeleteHandler = () =>{\n        this.setState({isLoading: true});\n        DeleteStaff(this.state.DeletePerson.id).then(res=>{\n            this.setState({\n                data: res.data,\n                isLoading:false,\n                DeleteModalVisible: false\n            })\n        }).catch(err=>{\n            console.log(err);\n            this.setState({isLoading:false})\n        })\n    };\n\n\n\n\n    render(){\n        return (\n            <Fragment>\n                <DashboardBody title={this.props.name}>\n                    <Spin style={{top:250}} tip=\"Loading...\" spinning={this.state.isLoading}>\n                        <Button onClick={this.openAddModal} style={{marginBottom:10}} type=\"primary\">\n                            Add Staff\n                        </Button>\n                        <div>\n                            {this.state.data.map((s,i)=>{\n                                return (\n                                    <div key={i.toString()} className={classes.card}>\n                                        <Descriptions  style={{paddingBottom:\"10px\",margin:10}} title={s.name} size='default'>\n                                            <Descriptions.Item label=\"Role\">{s.role}</Descriptions.Item>\n                                            <Descriptions.Item label=\"职位\">{s.role_cn}</Descriptions.Item>\n                                            <Descriptions.Item label=\"Operation\">\n                                                <div>\n                                                    <span style={{marginRight:10}} className={classes.edit} onClick={()=>{this.openDeleteModal(s)}}>Delete</span>\n                                                    <span className={classes.edit} onClick={()=>{this.openEditModal(s)}}>Edit</span>\n                                                </div>\n                                            </Descriptions.Item>\n                                            <Descriptions.Item label=\"image\"><a href={s.image}><img width={100} height={100} src={s.image} /></a></Descriptions.Item>\n                                            <Descriptions.Item label=\"wechat\"><a href={s.wechat}><img width={100} height={100} src={s.wechat} /></a></Descriptions.Item>\n                                        </Descriptions>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </Spin>\n                </DashboardBody>\n                <StaffEditModal hideModalThenFetch={this.hideEditModalThenFetch} visible={this.state.EditModalVisible} hideModal={this.hideEditModal} values={this.state.propsToModal}/>\n                <StaffAddModal visible={this.state.AddModalVisible} hideModal={this.hideAddModal} isLoading={this.state.isLoading} AddStaff={this.AddStaffHandler}/>\n                <GeneralConfirmModal\n                    title=\"Delete Confirmation\"\n                    visible={this.state.DeleteModalVisible}\n                    confirm={this.DeleteHandler}\n                    hideModal={this.hideDeleteModal}\n                    text={`Are you sure to delete ${this.state.DeletePerson.name}`}\n                    isLoading={this.state.isLoading}\n                />\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        StaffInfoData: state.StaffInfoReducer\n    }\n};\n\n\n\nexport default connect(mapStateToProps)(StaffInfo)\n","import React,{Component} from 'react'\nimport {Modal,Form,Input,Upload,Icon,Button} from 'antd'\nimport {UploadImage} from '../../../api/api'\n\nconst AddCompanyDescription = Form.create({name:\"add_company_description\"})(\n    class extends Component{\n\n        state={\n            imageFileList:[]\n        };\n\n\n        imageFile = e => {\n            this.setState({\n                imageFileList: e.fileList\n            });\n            if (Array.isArray(e)) {\n                return e;\n            }\n            return e && e.fileList;\n        };\n\n\n\n        HandlerSubmit = (e)=>{\n            e.preventDefault();\n            this.props.form.validateFields((err, values) => {\n                if (!err){\n                    const fdata = new FormData()\n                    Object.keys(values).forEach(key=>{\n                        if (key===\"image\"){\n                        }else{\n                            fdata.append(key,values[key])\n                        }\n                    })\n\n                    if (values.image.length !== 0){\n                        if (values.image[0].response.is_success){\n                            fdata.append(\"image\",values.image[0].response.data)\n                        }else{\n                            fdata.append(\"image\",\"\")\n                        }\n                    }else{\n                        fdata.append(\"image\",\"\")\n                    }\n                    this.props.confirm(fdata)\n                    this.setState({\n                        imageFileList:[]\n                    })\n                }\n            })\n        };\n\n\n        render(){\n            console.log(this.state)\n            const { form } = this.props;\n            const { getFieldDecorator } = form;\n            return (\n                <Modal\n                    style={{top:10}}\n                    visible={this.props.visible}\n                    title={`Add About`}\n                    okText=\"Add\"\n                    onCancel={()=>{\n                        this.props.hideModal()\n                        this.setState({\n                            imageFileList:[]\n                        })\n                    }}\n                    onOk={this.HandlerSubmit}\n                    confirmLoading={this.props.isLoading}\n                    destroyOnClose={true}\n                >\n                    <Form layout=\"vertical\">\n                        <Form.Item label=\"timeline\">\n                            {getFieldDecorator('timeline', {\n                                rules: [{ required: true, message: 'Please enter the timeline!' }],\n                            })(<Input/>)}\n                        </Form.Item>\n                        <Form.Item  label=\"时间线\">\n                            {getFieldDecorator('timeline_cn',{\n                                rules: [{ required: true, message: 'Please enter the 时间线!' }],\n                            })(<Input type=\"textarea\" />)}\n                        </Form.Item>\n                        <Form.Item label=\"description\">\n                            {getFieldDecorator('description',{\n                                rules: [{ required: true, message: 'Please enter the description!' }],\n                            })(<Input.TextArea  rows={4}/>)}\n                        </Form.Item>\n                        <Form.Item label=\"描述\">\n                            {getFieldDecorator('description_cn',{\n                                rules: [{ required: true, message: 'Please enter the chinese description!' }],\n                            })(<Input.TextArea rows={4}/>)}\n                        </Form.Item>\n                        <Form.Item label=\"subheading\">\n                            {getFieldDecorator('subheading',{\n                                rules: [{ required: true, message: 'Please enter the chinese subheading!' }],\n                            })(<Input />)}\n                        </Form.Item>\n                        <Form.Item label=\"子标题\">\n                            {getFieldDecorator('subheading_cn',{\n                                rules: [{ required: true, message: 'Please enter the chinese 子标题!' }],\n                            })(<Input />)}\n                        </Form.Item>\n                        <Form.Item label=\"image\">\n                            {getFieldDecorator('image', {\n                                valuePropName: 'image',\n                                getValueFromEvent: this.imageFile,\n                                rules: [{ required: true, message: 'Please upload image!' }],\n                            })(\n                                <Upload action={UploadImage} name=\"image\" listType=\"picture\">\n                                    {this.state.imageFileList.length===0?(<Button>\n                                        <Icon type=\"upload\" /> Click to upload\n                                    </Button>):null}\n                                </Upload>\n                            )}\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            )\n        }\n    }\n);\n\n\nexport default AddCompanyDescription\n\n\n\n","import React,{Component} from 'react'\nimport {Modal,Form,Input,Upload,Icon,Button} from 'antd'\nimport {UploadImage} from '../../../api/api'\n\nconst EditCompanyDescriptionModal = Form.create({name:\"edit_company_description\"})(\n    class extends Component{\n\n        state={\n            imageFileList:[]\n        };\n\n        imageFile = e => {\n            this.setState({\n                imageFileList: e.fileList\n            });\n            if (Array.isArray(e)) {\n                return e;\n            }\n            return e && e.fileList;\n        };\n\n\n\n        HandlerSubmit = (e)=>{\n            e.preventDefault();\n            this.props.form.validateFields((err, values) => {\n                if (!err){\n                    const fdata = new FormData()\n                    Object.keys(values).forEach(key=>{\n                        if (key===\"image\"){\n                        }else{\n                            fdata.append(key,values[key])\n                        }\n                    })\n\n                    if (values.image.length !== 0){\n                        if (values.image[0].response.is_success){\n                            fdata.append(\"image\",values.image[0].response.data)\n                        }else{\n                            fdata.append(\"image\",this.props.values.image)\n                        }\n                    }else{\n                        fdata.append(\"image\",this.props.values.image)\n                    }\n\n                    this.props.confirm(this.props.values.id,fdata,()=>{\n                        this.props.form.resetFields()\n                    })\n\n                    this.setState({\n                        imageFileList:[]\n                    })\n                }\n            })\n        };\n\n\n\n        render(){\n            const { form } = this.props;\n            const { getFieldDecorator } = form;\n            return (\n                <Modal\n                    style={{top:10}}\n                    visible={this.props.visible}\n                    title={`Add About`}\n                    okText=\"Add\"\n                    onCancel={()=>{\n                        this.props.hideModal()\n                        this.setState({\n                            imageFileList:[]\n                        })\n                    }}\n                    destroyOnClose={true}\n                    onOk={this.HandlerSubmit}\n                    confirmLoading={this.props.isLoading}\n                >\n                    <Form layout=\"vertical\">\n                        <Form.Item label=\"timeline\">\n                            {getFieldDecorator('timeline', {\n                                rules: [{ required: true, message: 'Please enter the timeline!' }],\n                                initialValue: this.props.values.timeline\n                            })(<Input/>)}\n                        </Form.Item>\n                        <Form.Item  label=\"时间线\">\n                            {getFieldDecorator('timeline_cn',{\n                                rules: [{ required: true, message: 'Please enter the 时间线!' }],\n                                initialValue: this.props.values.timeline_cn\n                            })(<Input type=\"textarea\" />)}\n                        </Form.Item>\n                        <Form.Item label=\"description\">\n                            {getFieldDecorator('description',{\n                                rules: [{ required: true, message: 'Please enter the description!' }],\n                                initialValue: this.props.values.description\n                            })(<Input.TextArea rows={4} />)}\n                        </Form.Item>\n                        <Form.Item label=\"描述\">\n                            {getFieldDecorator('description_cn',{\n                                rules: [{ required: true, message: 'Please enter the chinese description!' }],\n                                initialValue: this.props.values.description_cn\n                            })(<Input.TextArea rows={4}/>)}\n                        </Form.Item>\n                        <Form.Item label=\"subheading\">\n                            {getFieldDecorator('subheading',{\n                                rules: [{ required: true, message: 'Please enter the chinese subheading!' }],\n                                initialValue: this.props.values.subheading\n                            })(<Input />)}\n                        </Form.Item>\n                        <Form.Item label=\"子标题\">\n                            {getFieldDecorator('subheading_cn',{\n                                rules: [{ required: true, message: 'Please enter the chinese 子标题!' }],\n                                initialValue: this.props.values.subheading_cn\n                            })(<Input />)}\n                        </Form.Item>\n                        <Form.Item label=\"image\">\n                            {getFieldDecorator('image', {\n                                valuePropName: 'image',\n                                getValueFromEvent: this.imageFile,\n                                initialValue:[]\n                            })(\n                                <Upload action={UploadImage} name=\"image\" listType=\"picture\">\n                                    {this.state.imageFileList.length===0?(<Button>\n                                        <Icon type=\"upload\" /> Click to upload\n                                    </Button>):null}\n                                </Upload>\n                            )}\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            )\n        }\n    }\n);\n\n\nexport default EditCompanyDescriptionModal\n\n\n\n","import React, {Component} from 'react'\nimport DashboardBody from \"../../../components/common/DashboardBody/DashboardBody\";\nimport {Button, List, Spin} from \"antd\";\nimport {GetAbout, AddAbout, DeleteAbout, UpdateAbout} from \"../../../api/api\";\nimport AddCompanyDescription from \"../../../components/UI/AddCompanyDescriptionModal/AddCompanyDescriptionModal\";\nimport GeneralConfirmModal from \"../../../components/UI/GeneralConfirmModal/GeneralConfirmModal\";\nimport EditCompanyDescriptionModal\n    from \"../../../components/UI/EditCompanyDescriptionModal/EditCompanyDescriptionModal\";\n\nclass CompanyDescription extends Component{\n\n\n    state = {\n        isLoading:false,\n        data: [],\n        AddModalVisible:false,\n        DeleteModalVisible: false,\n        EditModalVisible:false,\n        DeleteId: \"\",\n        passToModal: {\n            id:\"\",\n            timeline:\"\",\n            timeline_cn:\"\",\n            image: \"\",\n            description: \"\",\n            description_cn:\"\",\n            subheading: \"\",\n            subheading_cn:\"\",\n        }\n    };\n\n    componentWillUnmount = () =>{\n        this.setState = state=>{\n            return;\n        }\n    };\n\n    componentDidMount = () =>{\n        this.setState({\n            isLoading:true\n        });\n        GetAbout().then(res=>{\n            this.setState({\n                isLoading:false,\n                data:res.data\n            })\n        }).catch(err=>{\n            console.log(err)\n            this.setState({\n                isLoading:false\n            })\n        })\n    };\n\n    OpenAddModal = () =>{\n        this.setState({\n            AddModalVisible: true\n        })\n    };\n\n    hideAddModal = () =>{\n        this.setState({\n            AddModalVisible: false\n        })\n    }\n\n    AddAboutHandler = (data)=>{\n        this.setState({isLoading:true})\n        AddAbout(data).then(res=>{\n            this.setState({\n                isLoading:false,\n                data:res.data,\n                AddModalVisible:false\n            })\n        }).catch(err=>{\n            console.log(err)\n            this.setState({isLoading:false})\n        })\n    }\n\n    DeleteAboutHandler =() =>{\n        this.setState({isLoading: true})\n        DeleteAbout(this.state.DeleteId).then(res=>{\n            this.setState({\n                isLoading:false,\n                data:res.data,\n                DeleteModalVisible: false,\n                DeleteId: \"\"\n            })\n        }).catch(err=>{\n            console.log(err)\n            this.setState({\n                isLoading:false\n            })\n        })\n    }\n\n    hideDeleteModal = () =>{\n        this.setState({\n            DeleteModalVisible: false\n        })\n    };\n\n    OpenDeleteModal = (id) =>{\n        this.setState({\n            DeleteModalVisible:true,\n            DeleteId: id\n        })\n    };\n\n    hideEditModal = () =>{\n        this.setState({\n            EditModalVisible: false\n        })\n    }\n\n    OpenEditModal = (obj) =>{\n        this.setState({\n            EditModalVisible: true,\n        },()=>{\n            this.setState({\n                passToModal: {\n                    id:obj._id.$oid,\n                    timeline:obj.timeline,\n                    timeline_cn:obj.timeline_cn,\n                    image: obj.image,\n                    description: obj.description,\n                    description_cn:obj.description_cn,\n                    subheading: obj.subheading,\n                    subheading_cn:obj.subheading_cn,\n                }\n            })\n        })\n    }\n\n    EditHandler = (id,data,cb) =>{\n        this.setState({isLoading:true})\n        UpdateAbout(id,data).then(res=>{\n            this.setState({\n                isLoading:false,\n                EditModalVisible:false,\n                data:res.data,\n                passToModal: {\n                    id:\"\",\n                    timeline:\"\",\n                    timeline_cn:\"\",\n                    image: \"\",\n                    description: \"\",\n                    description_cn:\"\",\n                    subheading: \"\",\n                    subheading_cn:\"\",\n                }\n            },()=>{\n                cb()\n            })\n        }).catch(err=>{\n            console.log(err)\n            this.setState({isLoading:false})\n        })\n    }\n\n\n    render(){\n        return (\n            <React.Fragment>\n                <DashboardBody title={this.props.name}>\n                    <Spin style={{top:250}} tip=\"Loading...\" spinning={this.state.isLoading}>\n                        <Button onClick={this.OpenAddModal} type=\"primary\">\n                            Add more description\n                        </Button>\n                        <List\n                            itemLayout=\"vertical\"\n                            size=\"large\"\n                            dataSource={this.state.data}\n                            renderItem={item=>(\n                                <List.Item\n                                    actions={[<a onClick={()=>{this.OpenEditModal(item)}} key=\"list-loadmore-edit\">edit</a>, <a onClick={()=>{this.OpenDeleteModal(item._id.$oid)}} key=\"list-loadmore-more\">delete</a>]}\n                                    extra={<img alt=\"\" width={272} src={item.image}/>}\n                                >\n                                    <List.Item.Meta\n                                        title={item.subheading}\n                                        description={item.timeline}\n                                    />\n                                    {item.description}\n                                </List.Item>\n                            )}\n                        />\n                    </Spin>\n                </DashboardBody>\n                <AddCompanyDescription\n                    hideModal={this.hideAddModal}\n                    visible={this.state.AddModalVisible}\n                    isLoading={this.state.isLoading}\n                    confirm={this.AddAboutHandler}\n                />\n                <GeneralConfirmModal\n                    title=\"Delete Confirmation\"\n                    visible={this.state.DeleteModalVisible}\n                    confirm={this.DeleteAboutHandler}\n                    hideModal={this.hideDeleteModal}\n                    isLoading={this.state.isLoading}\n                    text=\"Are you sure to delete it?\"\n                />\n                <EditCompanyDescriptionModal\n                    hideModal={this.hideEditModal}\n                    visible={this.state.EditModalVisible}\n                    isLoading={this.state.isLoading}\n                    values={this.state.passToModal}\n                    confirm={this.EditHandler}\n                />\n            </React.Fragment>\n        )\n    }\n}\n\nexport default CompanyDescription\n","import React,{Component} from 'react'\nimport {Modal,Form,Input,Upload,Icon,Button} from 'antd'\nimport {PostBrands, UploadImage} from '../../../api/api'\nimport {connect} from 'react-redux'\nimport {SetData} from \"../../../redux/actions/BrandAction\";\n\nconst BrandAddModal = Form.create({name:\"brand_add_modal\"})(\n    class extends Component{\n\n        UNSAFE_componentWillReceiveProps = () =>{\n            if (this.props.visible === false){\n                this.props.form.resetFields();\n            }\n        };\n\n        state={\n            isLoading:false,\n            imageFileList:[]\n        };\n\n        imageFile = e => {\n            this.setState({\n                imageFileList: e.fileList\n            });\n            if (Array.isArray(e)) {\n                return e;\n            }\n            return e && e.fileList;\n        };\n\n\n\n        HandlerSubmit = (e)=>{\n            e.preventDefault();\n            this.props.form.validateFields((err, values) => {\n                if (!err){\n                    let fdata = new FormData()\n                    fdata.append('name',values.name)\n                    fdata.append('name_cn',values.name_cn)\n                    fdata.append('description',values.description)\n                    fdata.append('description_cn',values.description_cn)\n\n                    if (values.image.length !== 0){\n                        if (values.image[0].response.is_success){\n                            fdata.append(\"image\",values.image[0].response.data)\n                        }else{\n                            fdata.append(\"image\",\"\")\n                        }\n                    }else{\n                        fdata.append(\"image\",\"\")\n                    }\n\n                    this.setState({isLoading:true})\n                    PostBrands(fdata).then(res=>{\n                        this.setState({isLoading:false},()=>{\n                            this.props.hideModal()\n                            this.props.SetData(res.data)\n                        })\n                    }).catch(err=>{\n                        console.log(err);\n                        this.setState({isLoading:false})\n                    })\n                    this.setState({\n                        imageFileList:[]\n                    })\n                }\n            })\n        };\n\n\n        render(){\n            const { form } = this.props;\n            const { getFieldDecorator } = form;\n            return (\n                <Modal\n                    visible={this.props.visible}\n                    title={`Add brands`}\n                    okText=\"Add\"\n                    onCancel={()=>{\n                        this.props.hideModal()\n                        this.setState({\n                            imageFileList:[]\n                        })\n                    }}\n                    onOk={this.HandlerSubmit}\n                    destroyOnClose={true}\n                    confirmLoading={this.state.isLoading}\n                >\n                    <Form layout=\"vertical\">\n                        <Form.Item label=\"name\">\n                            {getFieldDecorator('name', {\n                                rules: [{ required: true, message: 'Please enter the name!' }],\n                            })(<Input/>)}\n                        </Form.Item>\n                        <Form.Item  label=\"名字\">\n                            {getFieldDecorator('name_cn',{\n                                rules: [{ required: true, message: 'Please enter the chinese name!' }],\n                            })(<Input type=\"textarea\" />)}\n                        </Form.Item>\n                        <Form.Item label=\"description\">\n                            {getFieldDecorator('description',{\n                                rules: [{ required: true, message: 'Please enter the description!' }],\n                            })(<Input  />)}\n                        </Form.Item>\n                        <Form.Item label=\"描述\">\n                            {getFieldDecorator('description_cn',{\n                                rules: [{ required: true, message: 'Please enter the chinese description!' }],\n                            })(<Input />)}\n                        </Form.Item>\n                        <Form.Item label=\"image\">\n                            {getFieldDecorator('image', {\n                                valuePropName: 'image',\n                                getValueFromEvent: this.imageFile,\n                                initialValue: []\n                            })(\n                                <Upload action={UploadImage} name=\"image\" listType=\"picture\">\n                                    {this.state.imageFileList.length===0?(<Button>\n                                        <Icon type=\"upload\" /> Click to upload\n                                    </Button>):null}\n                                </Upload>\n                            )}\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            )\n        }\n    }\n);\n\nconst mapStateToProps = state => {\n    return {\n        BrandData: state.BrandReducer\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        SetData: (value) =>{\n            dispatch(SetData(value))\n        }\n    }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(BrandAddModal)\n\n\n\n","export const SetData = (data) =>{\n    return {\n        type: 'setData',\n        payload: data\n    }\n};\n","import React from 'react'\nimport {Modal} from 'antd'\nconst BrandDeleteModal = (props) =>{\n\n    const handleOk = () =>{\n        props.confirm(props.id)\n    }\n\n    return (\n        <Modal\n            title=\"Delete Confirmation\"\n            visible={props.visible}\n            onOk={handleOk}\n            confirmLoading={props.isLoading}\n            onCancel={props.hideModal}\n        >\n            <p>Are u sure to delete?</p>\n        </Modal>\n    )\n}\n\nexport default BrandDeleteModal\n","import React,{Component} from 'react'\nimport {Modal,Form,Input,Upload,Icon,Button} from 'antd'\nimport {UploadImage} from \"../../../api/api\";\n\nconst BrandEditModal = Form.create({name:\"brand_edit_modal\"})(\n    class extends Component{\n\n\n        imageFile = e => {\n            this.setState({\n                imageFileList: e.fileList\n            });\n            if (Array.isArray(e)) {\n                return e;\n            }\n            return e && e.fileList;\n        };\n\n        state={\n            imageFileList:[],\n        };\n\n\n        onCancel = () =>{\n            this.props.hideModal()\n        };\n\n\n\n        HandlerSubmit = (e)=>{\n            e.preventDefault();\n            this.props.form.validateFields((err, values) => {\n                if (!err){\n                    let fdata = new FormData()\n                    fdata.append('name',values.name)\n                    fdata.append('name_cn',values.name_cn)\n                    fdata.append('description',values.description)\n                    fdata.append('description_cn',values.description_cn)\n                    console.log(fdata['name'])\n                    if (values.image.length !== 0){\n                        if (values.image[0].response.is_success){\n                            fdata.append(\"image\",values.image[0].response.data)\n                        }else{\n                            fdata.append(\"image\",this.props.values.image)\n                        }\n                    }else{\n                        fdata.append(\"image\",this.props.values.image)\n                    }\n                    this.props.updataBrand(this.props.values.id,fdata)\n                    this.setState({\n                        imageFileList:[]\n                    })\n                }\n            })\n        };\n\n\n        render(){\n            const { form } = this.props;\n            const { getFieldDecorator } = form;\n            return (\n                <Modal\n                    visible={this.props.visible}\n                    title={`Edit ${this.props.values.name} Information`}\n                    okText=\"Update\"\n                    onCancel={()=> {\n                        this.onCancel()\n                        this.setState({\n                            imageFileList:[]\n                        })\n                    }}\n                    destroyOnClose={true}\n                    onOk={this.HandlerSubmit}\n                    confirmLoading={this.props.isLoading}\n                >\n                    <Form layout=\"vertical\">\n                        <Form.Item label=\"name\">\n                            {getFieldDecorator('name', {\n                                initialValue: this.props.values.name\n                            })(<Input/>)}\n                        </Form.Item>\n                        <Form.Item label=\"名字\">\n                            {getFieldDecorator('name_cn', {\n                                initialValue: this.props.values.name_cn\n                            })(<Input/>)}\n                        </Form.Item>\n                        <Form.Item label=\"description\">\n                            {getFieldDecorator('description', {\n                                initialValue: this.props.values.description\n                            })(<Input/>)}\n                        </Form.Item>\n                        <Form.Item label=\"描述\">\n                            {getFieldDecorator('description_cn', {\n                                initialValue: this.props.values.description_cn\n                            })(<Input/>)}\n                        </Form.Item>\n\n                        <Form.Item label=\"image\">\n                            {getFieldDecorator('image', {\n                                valuePropName: 'image',\n                                getValueFromEvent: this.imageFile,\n                                initialValue: []\n                            })(\n                                <Upload action={UploadImage} name=\"image\" listType=\"picture\">\n                                    {this.state.imageFileList.length===0?(<Button>\n                                        <Icon type=\"upload\" /> Click to upload\n                                    </Button>):null}\n                                </Upload>\n                            )}\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            )\n        }\n    }\n);\n\n\n\n\n\nexport default BrandEditModal\n","import React, {Component,Fragment} from 'react'\nimport DashboardBody from \"../../../components/common/DashboardBody/DashboardBody\";\nimport {Card, Row, Col, Spin} from 'antd'\nimport classes from './Brand.css'\nimport {GetBrands,DeleteBrand,UpdateBrand} from '../../../api/api'\nimport BrandAddModal from \"../../../components/UI/BrandAddModal/BrandAddModal\";\nimport {connect} from 'react-redux'\nimport BrandDeleteModal from \"../../../components/UI/BrandDeleteModal/BrandDeleteModal\";\nimport BrandEditModal from \"../../../components/UI/BrandEditModal/BrandEditModal\";\n\n\nclass Brand extends Component{\n\n    state = {\n        data: [],\n        isLoading: false,\n        AddModalVisible: false,\n        DeleteConfirmModalVisible: false,\n        EditModalVisible: false,\n        currentBrandId: \"\",\n        propsToModal: {\n            id: \"\",\n            name: \"\",\n            name_cn:\"\",\n            description:\"\",\n            description_cn:\"\",\n            image:\"\"\n        }\n    };\n\n    componentDidMount = () =>{\n        this.FetchBrands()\n    };\n\n    UpdateBrandHandler = (id,data) =>{\n        this.setState({isLoading: true})\n        UpdateBrand(id,data).then(res=>{\n            this.setState({isLoading:false},()=>{\n                this.setState({\n                    data: res.data,\n                    EditModalVisible: false\n                })\n            })\n        }).catch(err=>{\n            this.setState({isLoading:false})\n            console.log(err)\n        })\n    };\n\n    ConfirmDeleteBrandHandler = (id) =>{\n        this.setState({isLoading:true})\n        DeleteBrand(id).then(res=>{\n            this.setState({isLoading:false},()=>{\n                this.setState({data: res.data,DeleteConfirmModalVisible:false})\n            })\n        }).catch(err=>{\n            console.log(err)\n            this.setState({isLoading:false})\n        })\n    };\n\n    UNSAFE_componentWillReceiveProps = (nextProps) =>{\n        if (this.props.BrandData !== nextProps.BrandData){\n            this.setState({\n                data: nextProps.BrandData\n            })\n        }\n    };\n\n    hideDeleteConfirmModal = () =>{\n        this.setState({\n            DeleteConfirmModalVisible: false\n        })\n    }\n\n    OpenAddModal = () =>{\n        this.setState({\n            AddModalVisible: true\n        })\n    };\n\n    hideAddModal = () =>{\n        this.setState({\n            AddModalVisible: false\n        })\n    };\n\n    hideEditModal = () =>{\n        this.setState({\n            EditModalVisible: false\n        })\n    };\n\n    openEditModal = (obj) =>{\n        this.setState({\n            propsToModal: {\n                id: obj._id.$oid,\n                name: obj.name,\n                name_cn: obj.name_cn,\n                description: obj.description,\n                description_cn: obj.description_cn,\n                image: obj.image\n            }\n        },()=>{\n            this.setState({EditModalVisible:true})\n        })\n    }\n\n\n\n    FetchBrands = () =>{\n        this.setState({isLoading:true})\n        GetBrands().then(res=>{\n            this.setState({isLoading:false})\n            this.setState({\n                data:res.data\n            })\n        }).catch(err=>{\n            this.setState({isLoading:false})\n            console.log(err)\n        })\n    }\n\n\n    componentWillUnmount = ()=> {\n        this.setState = (state) =>{\n            return;\n        }\n    }\n\n\n    OpenDeleteConfirmModal = (id) =>{\n        this.setState({currentBrandId:id},()=>{\n            this.setState({DeleteConfirmModalVisible: true})\n        })\n    };\n\n    render(){\n        return (\n            <Fragment>\n                <DashboardBody title={this.props.name}>\n                    <Spin style={{top:170}} tip=\"Loading...\" spinning={this.state.isLoading}>\n                        <Row gutter={[0,20]}>\n                            {this.state.data.map((s,i)=>{\n                                return (\n                                    <Col key={i.toString()} span={8}>\n                                        <Card\n                                            title={s.name}  style={{ width: 300 }} extra={\n                                            <div>\n                                                <a onClick={()=>{this.openEditModal(s)}}>Edit</a>\n                                                <a onClick={()=>{this.OpenDeleteConfirmModal(s._id.$oid)}} style={{marginLeft:10}}>Delete</a>\n                                            </div>\n                                        }>\n                                            <img style={{width:\"100%\",height:\"150px\"}} alt=\"\" src={`${s.image}`}/>\n                                        </Card>\n                                    </Col>\n\n                                )\n                            })}\n                            <Col span={8}>\n                                <div onClick={this.OpenAddModal} style={{opacity:this.state.isLoading?\"0\":\"1\"}} className={classes.add}/>\n                            </Col>\n                        </Row>\n                    </Spin>\n                </DashboardBody>\n                <BrandEditModal visible={this.state.EditModalVisible} hideModal={this.hideEditModal} updataBrand={this.UpdateBrandHandler} isLoading={this.state.isLoading} values={this.state.propsToModal} />\n                <BrandAddModal visible={this.state.AddModalVisible} hideModal={this.hideAddModal}/>\n                <BrandDeleteModal visible={this.state.DeleteConfirmModalVisible} isLoading={this.state.isLoading} id={this.state.currentBrandId} hideModal={this.hideDeleteConfirmModal} confirm={this.ConfirmDeleteBrandHandler}/>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        BrandData: state.BrandReducer\n    }\n};\n\n\nexport default connect(mapStateToProps)(Brand)\n","import {GetProductCategory,UpdateProductCategory} from '../../api/api'\nexport const FetchProductCategory = () =>{\n    return (dispatch)=>{\n        dispatch({\n            type: \"BeforeFetchData\"\n        });\n\n        GetProductCategory().then(res=>{\n            return dispatch({\n                type: \"FetchDataSuccess\",\n                payload: res.data\n            })\n        }).catch(err=>{\n            console.log(err)\n            return dispatch({\n                type: \"FetchDataFail\"\n            })\n        })\n    }\n}\n\nexport const UpdateAndFetchProductCategory = (id,data,cb) =>{\n    return dispatch=>{\n        dispatch({\n            type: \"BeforeFetchData\"\n        });\n        UpdateProductCategory(id,data).then(res=>{\n            dispatch({\n                type: \"FetchDataSuccess\",\n                payload: res.data\n            })\n\n            cb()\n        }).catch(err=>{\n            console.log(err)\n            dispatch({\n                type: \"FetchDataFail\"\n            })\n        })\n    }\n};\n","import React,{Component} from 'react'\nimport {Modal,Form,Input,Upload,Icon,Button} from 'antd'\nimport {connect} from 'react-redux'\nimport {UploadImage} from \"../../../api/api\";\nimport {UpdateAndFetchProductCategory} from \"../../../redux/actions/ProductCategoryAction\";\nconst ProductCategoryEditModal = Form.create({name:\"product_category_edit_modal\"})(\n    class extends Component{\n\n        UNSAFE_componentWillReceiveProps = (nextProps) => {\n            if (nextProps.values !== this.props.values){\n                this.props.form.resetFields();\n            }\n        };\n\n\n        imageFile = e => {\n            this.setState({\n                imageFileList: e.fileList\n            });\n            if (Array.isArray(e)) {\n                return e;\n            }\n            return e && e.fileList;\n        };\n\n        state={\n            imageFileList:[],\n        };\n\n\n        onCancel = () =>{\n            this.props.hideModal()\n        };\n\n\n\n        HandlerSubmit = (e)=>{\n            e.preventDefault();\n            this.props.form.validateFields((err, values) => {\n                if (!err){\n                    let fdata = new FormData()\n                    fdata.append('name',values.name)\n                    fdata.append('name_cn',values.name_cn)\n                    fdata.append('description',values.description)\n                    fdata.append('description_cn',values.description_cn)\n                    if (values.image.length !== 0){\n                        if (values.image[0].response.is_success){\n                            fdata.append(\"image\",values.image[0].response.data)\n                        }else{\n                            fdata.append(\"image\",this.props.values.image)\n                        }\n                    }else{\n                        fdata.append(\"image\",this.props.values.image)\n                    }\n                    this.props.UpdateAndFetchProductCategory(this.props.values.id,fdata,()=>{\n                        this.onCancel()\n                    })\n\n                    this.setState({\n                        imageFileList:[]\n                    })\n                }\n            })\n        };\n\n\n        render(){\n            const { form } = this.props;\n            const { getFieldDecorator } = form;\n            return (\n                <Modal\n                    visible={this.props.visible}\n                    title={`Edit ${this.props.values.name} Information`}\n                    okText=\"Update\"\n                    onCancel={()=>{\n                        this.onCancel()\n                        this.setState({\n                            imageFileList:[]\n                        })\n                    }}\n                    destroyOnClose={true}\n                    onOk={this.HandlerSubmit}\n                    confirmLoading={this.props.Data.isLoading}\n                >\n                    <Form layout=\"vertical\">\n                        <Form.Item label=\"name\">\n                            {getFieldDecorator('name', {\n                                initialValue: this.props.values.name\n                            })(<Input/>)}\n                        </Form.Item>\n                        <Form.Item label=\"名字\">\n                            {getFieldDecorator('name_cn', {\n                                initialValue: this.props.values.name_cn\n                            })(<Input/>)}\n                        </Form.Item>\n                        <Form.Item label=\"description\">\n                            {getFieldDecorator('description', {\n                                initialValue: this.props.values.description\n                            })(<Input/>)}\n                        </Form.Item>\n                        <Form.Item label=\"描述\">\n                            {getFieldDecorator('description_cn', {\n                                initialValue: this.props.values.description_cn\n                            })(<Input/>)}\n                        </Form.Item>\n                        <Form.Item label=\"image\">\n                            {getFieldDecorator('image', {\n                                valuePropName: 'image',\n                                getValueFromEvent: this.imageFile,\n                                initialValue: []\n                            })(\n                                <Upload action={UploadImage} name=\"image\" listType=\"picture\">\n                                    {this.state.imageFileList.length===0?(<Button>\n                                        <Icon type=\"upload\" /> Click to upload\n                                    </Button>):null}\n                                </Upload>,\n                            )}\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            )\n        }\n    }\n);\n\nconst mapStateToProps = state => {\n    return {\n        Data: state.ProductCategoryReducer\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        UpdateAndFetchProductCategory: (id,data,cb)=> dispatch(UpdateAndFetchProductCategory(id,data,cb))\n    }\n};\n\n\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ProductCategoryEditModal)\n","import React, {Component, Fragment} from 'react'\nimport DashboardBody from \"../../../components/common/DashboardBody/DashboardBody\";\nimport {connect} from 'react-redux'\nimport {FetchProductCategory} from \"../../../redux/actions/ProductCategoryAction\";\nimport {Card, Col, Row, Spin} from \"antd\";\nimport ProductCategoryEditModal from \"../../../components/UI/ProductCategoryEditModal/ProductCategoryEditModal\";\nimport {withRouter} from 'react-router-dom'\nclass ProductCategory extends Component{\n\n\n    componentDidMount = () =>{\n        this.props.FetchProductCategory()\n    };\n\n    componentWillUnmount = ()=> {\n        this.setState = (state)=>{\n            return;\n        }\n    };\n\n    state = {\n        ProductCategoryVisible: false,\n        propsToModal: {\n            name: \"\",\n            name_cn:\"\",\n            description: \"\",\n            description_cn: \"\",\n            image:\"\"\n        }\n    };\n\n    hideProductCategoryModal = () =>{\n        this.setState({ProductCategoryVisible: false})\n    };\n\n    openProductCategoryModal= (obj) =>{\n        this.setState({\n            propsToModal:{\n                name: obj.name,\n                name_cn: obj.name_cn,\n                description: obj.description,\n                description_cn: obj.description_cn,\n                id: obj._id.$oid,\n                image: obj.image\n            }\n        },()=>{\n            this.setState({ProductCategoryVisible:true})\n        })\n    };\n\n\n    navigateTo =(path) =>{\n        this.props.history.push(path)\n    }\n\n\n    render(){\n        return (\n            <Fragment>\n                <DashboardBody title={this.props.name}>\n                    <Spin style={{top:250}} tip=\"Loading...\" spinning={this.props.Data.isLoading}>\n                        <Row gutter={[0,20]}>\n                            {this.props.Data.data.map((s,i)=>{\n                                const path = \"/dashboard/product/\" + s._id.$oid\n                                return (\n                                    <Col key={i.toString()} span={8}>\n                                        <Card\n                                            title={s.name}  style={{ width: 300 }} extra={<a onClick={()=>{this.openProductCategoryModal(s)}}>Edit</a>}>\n                                            <img onClick={()=>{this.navigateTo(path)}} style={{width:\"100%\",height:\"150px\",cursor:\"pointer\"}} alt=\"\" src={`${s.image}`}/>\n                                        </Card>\n                                    </Col>\n                                )\n                            })}\n                        </Row>\n                    </Spin>\n                </DashboardBody>\n                <ProductCategoryEditModal visible={this.state.ProductCategoryVisible} hideModal={this.hideProductCategoryModal} values={this.state.propsToModal}/>\n            </Fragment>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        Data: state.ProductCategoryReducer\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        FetchProductCategory: ()=> dispatch(FetchProductCategory())\n    }\n};\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(ProductCategory))\n","import React from 'react'\nimport { Modal, Button,Typography } from 'antd';\n\nconst ChangepasswordModal = (props) =>{\n\n    return (\n        <Modal\n            title=\"change password Confirmation\"\n            visible={props.visible}\n            onOk={props.confirm}\n            onCancel={props.hideModal}\n            okText=\"Confirm\"\n            cancelText=\"Cancel\"\n        >\n            <Typography.Title level={3}>Are sure to change password and Re-login</Typography.Title>\n        </Modal>\n    )\n}\n\nexport default ChangepasswordModal\n","import React,{Component} from 'react'\nimport DashboardBody from \"../../../components/common/DashboardBody/DashboardBody\";\nimport {Input,Button,Form} from 'antd'\nimport {ChangePassWord} from '../../../api/api'\nimport ChangepasswordModal from '../../../components/UI/ChangePassword/changepasswordModal';\n\n\nclass ChangePassword extends Component{\n    state={\n        confirmDirty: false,\n        newpassword:'',\n        oldpassword:'',\n        changeModalVisible: false\n    }\n    openchangepasswordModal = () =>{\n        this.setState({\n            changeModalVisible: true\n        })\n    }\n    hidechangepasswordModal = () =>{\n        this.setState({\n            changeModalVisible: false\n        })\n    }\n     passwordchanged=()=>{\n        let id =window.localStorage.getItem('user_id');\n        let formData = new FormData();\n        formData.append(\"old_password\",this.state.oldpassword)\n        formData.append(\"new_password\",this.state.newpassword)\n         ChangePassWord(formData,id).then(\n            res=>{\n                console.log(res)\n            }\n        ).then(()=>{\n            localStorage.removeItem(\"token\")\n            localStorage.removeItem('name')\n            localStorage.removeItem('user_id')\n            window.location = \"/login\"\n        }).catch(error=>{\n            alert(error.error_message)\n        })\n    }\n\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n      };\n      validateToNextPassword = (rule, value, callback) => {\n        const { form } = this.props;\n       this.setState({oldpassword:form.getFieldValue('old_password')})\n        if (value && this.state.confirmDirty) {\n          form.validateFields(['confirm'], { force: true });\n        }if (value && value === form.getFieldValue('old_password')) {\n            callback('The new password should be inconsistent with the old password!');\n          } else {\n              this.setState({\n                  newpassword:value\n              })\n            callback();\n          }\n        callback();\n\n      };\n      compareToFirstPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('Two passwords that you enter is inconsistent!');\n        } else {\n          callback();\n        }\n      };\n      submitpassword=(e)=>{\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            this.setState({\n                changeModalVisible: true\n            })\n          }else{\n              return ''\n          }\n        });\n      };\n\n    render(){\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <DashboardBody title={this.props.name}>\n            <Form>\n\n             <Form.Item label=\"Old Password\" hasFeedback>\n                                {getFieldDecorator('old_password', {\n                                    rules: [{ required: true, message: 'Please input your Old Password!' }],\n                                })\n                                (\n                                    <Input.Password/>,\n                                )}\n                            </Form.Item>\n            <Form.Item label=\"Password\" hasFeedback>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                validator: this.validateToNextPassword,\n\n              },\n            ],\n          })(<Input.Password />)}\n        </Form.Item>\n        <Form.Item label=\"Confirm Password\" hasFeedback>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                validator: this.compareToFirstPassword,\n              },\n            ],\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n        </Form.Item>\n        <Form.Item >\n\n            <Button  type=\"primary\" htmlType=\"submit\" onClick={this.submitpassword} style={{marginLeft:'45%'}}>\n                   submit\n            </Button>\n            </Form.Item>\n            <ChangepasswordModal hideModal={this.hidechangepasswordModal} confirm={this.passwordchanged} visible={this.state.changeModalVisible}/>\n\n            </Form>\n            </DashboardBody>\n        )\n    }\n}\nconst Changepassword = Form.create({ name: 'change' })(ChangePassword);\nexport default Changepassword\n","import React,{Component} from 'react'\nimport {Modal,Form,Input,Upload,Icon,Button,Row,Col} from 'antd'\nimport {UploadImage} from '../../../api/api'\n\nconst ProductAddModal = Form.create({name:\"product_add_modal\"})(\n    class extends Component{\n\n        state={\n            isLoading:false,\n            imageFileList:[]\n        };\n\n        imageFile = e => {\n            this.setState({\n                imageFileList: e.fileList\n            });\n            if (Array.isArray(e)) {\n                return e;\n            }\n            return e && e.fileList;\n        };\n\n\n\n        HandlerSubmit = (e)=>{\n            e.preventDefault();\n            this.props.form.validateFields((err, values) => {\n                if (!err){\n                    let fdata = new FormData();\n                    Object.keys(values).forEach(key=>{\n                        if (key!==\"image\"){\n                            fdata.append(key,values[key])\n                        }\n                    });\n                    fdata.append('product_category_id', this.props.productCategoryId);\n                    if (values.image.length !== 0){\n                        if (values.image[0].response.is_success){\n                            const images = values.image.map(s=>{\n                                return s.response.data\n                            })\n                            fdata.append(\"image\",images)\n                        }else{\n                            fdata.append(\"image\",[])\n                        }\n                    }else{\n                        fdata.append(\"image\",[])\n                    }\n                    fdata.append('price',\"contact us\")\n                    fdata.append('price_cn', \"联系我们\")\n\n                    this.props.AddProduct(fdata,()=>{\n                        this.props.form.resetFields()\n                        this.setState({\n                            imageFileList:[]\n                        })\n                    })\n\n                }\n            })\n        };\n\n\n        render(){\n            const { form } = this.props;\n            const { getFieldDecorator } = form;\n            return (\n                <Modal\n                    style={{top:0}}\n                    width={1000}\n                    visible={this.props.visible}\n                    title={`Add Product`}\n                    okText=\"Add\"\n                    onCancel={()=>{\n                        this.props.hideModal()\n                        this.setState({\n                            imageFileList:[]\n                        })\n                    }}\n                    onOk={this.HandlerSubmit}\n                    confirmLoading={this.props.isLoading}\n                    destroyOnClose={true}\n                >\n                    <Form layout=\"vertical\">\n                        <Row type=\"flex\" justify=\"space-around\">\n                            <Col span={9}>\n                                <Form.Item label=\"code\">\n                                    {getFieldDecorator('code', {\n                                        rules: [{ required: true, message: 'Please enter the code!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"color\">\n                                    {getFieldDecorator('color', {\n                                        rules: [{ required: true, message: 'Please enter the color!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"environment\">\n                                    {getFieldDecorator('environment', {\n                                        rules: [{ required: true, message: 'Please enter the environment!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"finish\">\n                                    {getFieldDecorator('finish', {\n                                        rules: [{ required: true, message: 'Please enter the finish!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"material\">\n                                    {getFieldDecorator('material', {\n                                        rules: [{ required: true, message: 'Please enter the material!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"shape\">\n                                    {getFieldDecorator('shape', {\n                                        rules: [{ required: true, message: 'Please enter the shape!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"size\">\n                                    {getFieldDecorator('size', {\n                                        rules: [{ required: true, message: 'Please enter the size!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"style\">\n                                    {getFieldDecorator('style', {\n                                        rules: [{ required: true, message: 'Please enter the style!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"type\">\n                                    {getFieldDecorator('type', {\n                                        rules: [{ required: true, message: 'Please enter the type!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"unit\">\n                                    {getFieldDecorator('unit', {\n                                        rules: [{ required: true, message: 'Please enter the unit!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"颜色\">\n                                    {getFieldDecorator('color_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 颜色!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"适用场景\">\n                                    {getFieldDecorator('environment_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 适用场景!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"材料面\">\n                                    {getFieldDecorator('finish_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 材料面!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"材料\">\n                                    {getFieldDecorator('material_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 材料!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"形状\">\n                                    {getFieldDecorator('shape_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 形状!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"大小\">\n                                    {getFieldDecorator('size_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 大小!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"风格\">\n                                    {getFieldDecorator('style_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 风格!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"类型\">\n                                    {getFieldDecorator('type_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 类型!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"单位\">\n                                    {getFieldDecorator('unit_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 单位!' }],\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"image\">\n                                    {getFieldDecorator('image', {\n                                        valuePropName: 'image',\n                                        getValueFromEvent: this.imageFile,\n                                        initialValue: [],\n                                        rules: [{ required: true, message: 'Please upload the Image!' }],\n                                    })(\n                                        <Upload action={UploadImage} name=\"image\" listType=\"picture\">\n                                            {this.state.imageFileList.length!==4?(<Button>\n                                                <Icon type=\"upload\" /> Click to upload\n                                            </Button>):null}\n                                        </Upload>\n                                    )}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                    </Form>\n                </Modal>\n            )\n        }\n    }\n);\n\n\nexport default ProductAddModal\n\n\n\n","import React,{Component} from 'react'\nimport {Modal, Form, Input, Upload, Icon, Button, Row, Col} from 'antd'\nimport {UploadImage} from \"../../../api/api\";\n\nconst EditProductModal = Form.create({name:\"edit_product_modal\"})(\n    class extends Component{\n\n\n        imageFile = e => {\n            this.setState({\n                imageFileList: e.fileList\n            });\n            if (Array.isArray(e)) {\n                return e;\n            }\n            return e && e.fileList;\n        };\n\n        state={\n            imageFileList:[],\n        };\n\n\n        onCancel = () =>{\n            this.props.hideModal()\n        };\n\n\n\n        HandlerSubmit = (e)=>{\n            e.preventDefault();\n            this.props.form.validateFields((err, values) => {\n                let fdata = new FormData();\n                Object.keys(values).forEach(key=>{\n                    console.log(key)\n                    if (key!==\"image\"){\n                        fdata.append(key,values[key])\n                    }\n                });\n                fdata.append('product_category_id', this.props.productCategoryId);\n                if (values.image.length !== 0){\n                    if (values.image[0].response.is_success){\n                        const images = values.image.map(s=>{\n                            return s.response.data\n                        });\n                        fdata.append(\"image\",images)\n                    }else{\n                        fdata.append(\"image\",this.props.values.image)\n                    }\n                }else{\n                    fdata.append(\"image\",this.props.values.image)\n                }\n                fdata.append('price',\"contact us\")\n                fdata.append('price_cn', \"联系我们\")\n\n                this.props.updateProduct(this.props.values.id,fdata,()=>{\n                    this.props.form.resetFields()\n                })\n                this.setState({\n                    imageFileList:[]\n                })\n            })\n        };\n\n\n        render(){\n            const { form } = this.props;\n            const { getFieldDecorator } = form;\n            return (\n                <Modal\n                    visible={this.props.visible}\n                    title={`Edit ${this.props.values.code} Information`}\n                    okText=\"Update\"\n                    width={1000}\n                    style={{top:0}}\n                    onCancel={()=>{\n                        this.onCancel()\n                        this.setState({\n                            imageFileList:[]\n                        })\n                    }}\n                    onOk={this.HandlerSubmit}\n                    confirmLoading={this.props.isLoading}\n                    destroyOnClose={true}\n                >\n                    <Form layout=\"vertical\">\n                        <Row type=\"flex\" justify=\"space-around\">\n                            <Col span={9}>\n                                <Form.Item label=\"code\">\n                                    {getFieldDecorator('code', {\n                                        rules: [{ required: true, message: 'Please enter the code!' }],\n                                        initialValue: this.props.values.code\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"color\">\n                                    {getFieldDecorator('color', {\n                                        rules: [{ required: true, message: 'Please enter the color!' }],\n                                        initialValue: this.props.values.color\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"environment\">\n                                    {getFieldDecorator('environment', {\n                                        rules: [{ required: true, message: 'Please enter the environment!' }],\n                                        initialValue: this.props.values.environment\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"finish\">\n                                    {getFieldDecorator('finish', {\n                                        rules: [{ required: true, message: 'Please enter the finish!' }],\n                                        initialValue: this.props.values.finish\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"material\">\n                                    {getFieldDecorator('material', {\n                                        rules: [{ required: true, message: 'Please enter the material!' }],\n                                        initialValue: this.props.values.material\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"shape\">\n                                    {getFieldDecorator('shape', {\n                                        rules: [{ required: true, message: 'Please enter the shape!' }],\n                                        initialValue: this.props.values.shape\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"size\">\n                                    {getFieldDecorator('size', {\n                                        rules: [{ required: true, message: 'Please enter the size!' }],\n                                        initialValue: this.props.values.size\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"style\">\n                                    {getFieldDecorator('style', {\n                                        rules: [{ required: true, message: 'Please enter the style!' }],\n                                        initialValue: this.props.values.style\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"type\">\n                                    {getFieldDecorator('type', {\n                                        rules: [{ required: true, message: 'Please enter the type!' }],\n                                        initialValue: this.props.values.type\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"unit\">\n                                    {getFieldDecorator('unit', {\n                                        rules: [{ required: true, message: 'Please enter the unit!' }],\n                                        initialValue: this.props.values.unit\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"颜色\">\n                                    {getFieldDecorator('color_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 颜色!' }],\n                                        initialValue: this.props.values.color_cn\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"适用场景\">\n                                    {getFieldDecorator('environment_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 适用场景!' }],\n                                        initialValue: this.props.values.environment_cn\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"材料面\">\n                                    {getFieldDecorator('finish_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 材料面!' }],\n                                        initialValue: this.props.values.finish_cn\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"材料\">\n                                    {getFieldDecorator('material_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 材料!' }],\n                                        initialValue: this.props.values.material_cn\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"形状\">\n                                    {getFieldDecorator('shape_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 形状!' }],\n                                        initialValue: this.props.values.shape_cn\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"大小\">\n                                    {getFieldDecorator('size_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 大小!' }],\n                                        initialValue: this.props.values.size_cn\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"风格\">\n                                    {getFieldDecorator('style_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 风格!' }],\n                                        initialValue: this.props.values.style_cn\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"类型\">\n                                    {getFieldDecorator('type_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 类型!' }],\n                                        initialValue: this.props.values.type_cn\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"单位\">\n                                    {getFieldDecorator('unit_cn', {\n                                        rules: [{ required: true, message: 'Please enter the 单位!' }],\n                                        initialValue: this.props.values.unit_cn\n                                    })(<Input/>)}\n                                </Form.Item>\n                            </Col>\n                            <Col span={9}>\n                                <Form.Item label=\"image\">\n                                    {getFieldDecorator('image', {\n                                        valuePropName: 'image',\n                                        getValueFromEvent: this.imageFile,\n                                        initialValue: []\n                                    })(\n                                        <Upload action={UploadImage} name=\"image\" listType=\"picture\">\n                                            {this.state.imageFileList.length!==4?(<Button>\n                                                <Icon type=\"upload\" /> Click to upload\n                                            </Button>):null}\n                                        </Upload>\n                                    )}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                    </Form>\n                </Modal>\n            )\n        }\n    }\n);\n\n\n\n\n\nexport default EditProductModal\n","import React from 'react'\nimport {Modal} from \"antd\";\n\n\nconst ProductPreviewModal = (props) =>{\n    return (\n        <Modal\n            title={'Image Preview'}\n            visible={props.visible}\n            onCancel={props.hideModal}\n            onOk={props.hideModal}\n        >\n            {props.image?(\n                props.image.map(s=>{\n                    return <a href={s}><img style={{width: 300,height:300}} src={s} alt=\"\"/></a>\n                })\n            ):null}\n        </Modal>\n    )\n};\n\nexport default ProductPreviewModal\n","import React, {Component, Fragment} from 'react'\nimport DashboardBody from \"../../../components/common/DashboardBody/DashboardBody\";\nimport {AddProduct, DeleteProduct, FirstProductCategory, GetProductsById, UpdateProduct} from \"../../../api/api\";\nimport {withRouter} from 'react-router-dom'\nimport {Card, Col, Row, Spin,Input,Button,Icon} from \"antd\";\nimport ProductAddModal from \"../../../components/UI/AddProductModal/AddProductModal\";\nimport EditProductModal from \"../../../components/UI/EditProductModal/EditProductModal\";\nimport GeneralConfirmModal from \"../../../components/UI/GeneralConfirmModal/GeneralConfirmModal\";\nimport ProductPreviewModal from \"../../../components/UI/ProductPreviewModal/ProductPreviewModal\";\nconst {Search} = Input;\nclass Product extends Component{\n\n    state={\n        title: \"\",\n        isLoading: false,\n        data:[],\n        dataShown: [],\n        searchValue: \"\",\n        AddProductModalVisible: false,\n        EditProductModalVisible: false,\n        DeleteProductModalVisible: false,\n        ProductPreviewModalVisible: false,\n        SelectImage: [],\n        productDelete:{\n            code: \"\",\n            id:\"\"\n        },\n        passToModal: {\n            id: \"\",\n            code:\"\",\n            image: \"\",\n            color:\"\",\n            environment:\"\",\n            finish:\"\",\n            material:\"\",\n            price:\"\",\n            shape:\"\",\n            size: \"\",\n            style: \"\",\n            type: \"\",\n            unit: \"\",\n            color_cn: \"\",\n            environment_cn: \"\",\n            finish_cn: \"\",\n            material_cn: \"\",\n            price_cn: \"\",\n            shape_cn:\"\",\n            size_cn:\"\",\n            style_cn:\"\",\n            type_cn:\"\",\n            unit_cn:\"\"\n        }\n    };\n\n\n    hideProductAddModal = () =>{\n        this.setState({AddProductModalVisible: false})\n    };\n\n    openProductAddModal = () =>{\n        this.setState({AddProductModalVisible: true})\n    };\n\n    UpdateProductHandler = (id,data,cb) =>{\n        this.setState({isLoading:true})\n        UpdateProduct(id,data).then(res=>{\n            this.setState({isLoading:false},()=>{\n                this.setState({\n                    data: res.data,\n                    dataShown: res.data,\n                    EditProductModalVisible: false\n                })\n                cb()\n            })\n        }).catch(err=>{\n            console.log(err)\n            this.setState({isLoading:false})\n        })\n    }\n\n    AddProductHandler = (data,cb) =>{\n        this.setState({isLoading:true})\n        AddProduct(data).then(res=>{\n            this.setState({isLoading:false},()=>{\n                this.setState({\n                    data: res.data,\n                    dataShown: res.data,\n                    AddProductModalVisible: false\n                })\n                cb()\n            })\n        }).catch(err=>{\n            console.log(err)\n            this.setState({isLoading:false})\n        })\n    }\n\n    hideProductEditModal = () =>{\n        this.setState({EditProductModalVisible:false})\n    }\n\n    openProductEditModal = (obj) =>{\n        this.setState({\n            passToModal: {\n                id: obj._id.$oid,\n                code:obj.code,\n                image: obj.image,\n                color:obj.color,\n                environment:obj.environment,\n                finish:obj.finish,\n                material:obj.material,\n                price:obj.price,\n                shape:obj.shape,\n                size: obj.size,\n                style: obj.style,\n                type: obj.type,\n                unit: obj.unit,\n                color_cn: obj.color_cn,\n                environment_cn: obj.environment_cn,\n                finish_cn: obj.finish_cn,\n                material_cn: obj.material_cn,\n                price_cn: obj.price_cn,\n                shape_cn:obj.shape_cn,\n                size_cn:obj.size_cn,\n                style_cn:obj.style_cn,\n                type_cn:obj.type_cn,\n                unit_cn:obj.unit_cn\n            },\n            EditProductModalVisible:true\n        })\n    }\n\n\n    hideProductPreviewModal = () =>{\n        this.setState({\n            ProductPreviewModalVisible: false,\n        })\n    };\n\n    openProductPreviewModal =(images)=>{\n        this.setState({\n            SelectImage: images\n        },()=>{\n            this.setState({\n                ProductPreviewModalVisible: true\n            })\n        })\n    };\n\n    componentWillUnmount =() => {\n        this.setState = state=>{\n            return;\n        }\n    };\n\n    SearchOnChangeHandler = (e) =>{\n        const searchValue = e.target.value;\n        const result = this.state.data.filter(s=>s.code.toLowerCase().includes(searchValue.toLowerCase()))\n        this.setState({\n            dataShown: result,\n            searchValue: searchValue\n        })\n    };\n\n    componentDidMount = () =>{\n        this.setState({isLoading:true})\n        const productCategoryId = this.props.match.params.productCategoryId\n        FirstProductCategory(productCategoryId).then(res=>{\n            this.setState({\n                title: res.data.name\n            },()=>{\n                GetProductsById(productCategoryId).then(resp=>{\n                    this.setState({isLoading:false},()=>{\n                        this.setState({\n                            data:resp.data,\n                            dataShown: resp.data\n                        })\n                    })\n                }).catch(error=>{\n                    this.setState({isLoading:false})\n                    console.log(error)\n                })\n            })\n        }).catch(err=>{\n            this.props.history.push('/dashboard/productcategory')\n        })\n    };\n\n    hideDeleteProductModal = () =>{\n        this.setState({\n            DeleteProductModalVisible: false\n        })\n    };\n\n    OpenDeleteProductModal = (obj) =>{\n        this.setState({\n            DeleteProductModalVisible: true,\n            productDelete: {\n                code: obj.code,\n                id: obj._id.$oid\n            }\n        })\n    };\n\n    ConfirmDeleteHandler = () =>{\n        this.setState({isLoading:true})\n        DeleteProduct(this.state.productDelete.id).then(res=>{\n            this.setState({\n                data:res.data,\n                dataShown: res.data,\n                isLoading: false,\n                DeleteProductModalVisible: false\n            })\n        }).catch(err=>{\n            this.setState({isLoading:false})\n            console.log(err)\n        })\n    }\n\n    render(){\n        return (\n            <Fragment>\n                <DashboardBody title={this.state.title}>\n                    <Spin style={{top:250}} tip=\"Loading...\" spinning={this.state.isLoading}>\n                        <Row style={{marginBottom:20}}>\n                            <Col span={8}>\n                                <Button onClick={()=>{this.props.history.push('/dashboard/productcategory')}} type=\"primary\">\n                                    <Icon type=\"left\" />\n                                    Go back\n                                </Button>\n                            </Col>\n                                    <div style={{float:\"right\"}}>\n                                        <Search\n                                            placeholder=\"Search By Code or Name...\"\n                                            onChange={this.SearchOnChangeHandler}\n                                            style={{ width: 300}}\n                                            value={this.state.searchValue}\n                                        />\n                                        <Button onClick={this.openProductAddModal} type={\"primary\"}>Add Product</Button>\n                                    </div>\n                        </Row>\n                        <Row gutter={[0,20]}>\n                            {this.state.dataShown.map((s,i)=>{\n                                return (\n                                    <Col key={i.toString()} span={8}>\n                                        <Card\n                                            title={s.code}  style={{ width: 300 }} extra={\n                                                <Fragment>\n                                                    <a style={{marginRight:10}} onClick={()=>{this.OpenDeleteProductModal(s)}}>Delete</a>\n                                                    <a onClick={()=>{this.openProductEditModal(s)}}>Edit</a>\n                                                </Fragment>\n                                            }>\n                                            <a onClick={()=>{this.openProductPreviewModal(s.image)}}><img style={{width:\"100%\",height:\"150px\"}} alt=\"\" src={`${s.image[0]}`}/></a>\n                                        </Card>\n                                    </Col>\n                                )\n                            })}\n                        </Row>\n                    </Spin>\n                </DashboardBody>\n\n                <ProductAddModal\n                    visible={this.state.AddProductModalVisible} productCategoryId={this.props.match.params.productCategoryId}\n                    isLoading={this.state.isLoading} hideModal={this.hideProductAddModal} AddProduct={this.AddProductHandler}\n                />\n\n\n                <EditProductModal\n                    visible={this.state.EditProductModalVisible} hideModal={this.hideProductEditModal}\n                    isLoading={this.state.isLoading} values={this.state.passToModal} productCategoryId={this.props.match.params.productCategoryId}\n                    updateProduct={this.UpdateProductHandler}\n                />\n                <GeneralConfirmModal\n                    title=\"Delete Confirmation\"\n                    visible={this.state.DeleteProductModalVisible}\n                    confirm={this.ConfirmDeleteHandler}\n                    hideModal={this.hideDeleteProductModal}\n                    isLoading={this.state.isLoading}\n                    text={`Are sure to delete ${this.state.productDelete.code}`}\n                />\n                <ProductPreviewModal\n                    visible={this.state.ProductPreviewModalVisible} hideModal={this.hideProductPreviewModal} image={this.state.SelectImage}\n                />\n            </Fragment>\n        )\n    }\n}\n\nexport default withRouter(Product)\n","export default class UploadAdapter {\n    loader;\n    constructor(loader) {\n        this.loader = loader;\n    }\n\n    upload = () => {\n        return this.loader.file.then(\n            file =>\n                new Promise((resolve, reject) => {\n                    const myReader = new FileReader();\n                    myReader.onloadend = () => {\n                        resolve({ default: myReader.result });\n                    };\n                    myReader.readAsDataURL(file);\n                })\n        );\n    };\n}\n","import React, {Component} from 'react'\nimport CKEditor from '@ckeditor/ckeditor5-react'\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic'\nimport ImageUploader from \"../../../../utils/ImageUploader\";\nimport {Button} from 'antd'\nimport {connect} from 'react-redux'\nimport {ContentStepBackClick, ContentConfirmClick, CloseFinalConfirmModal,FinishPublish} from \"../../../../redux/actions/NewsAction\";\nimport GeneralConfirmModal from \"../../../../components/UI/GeneralConfirmModal/GeneralConfirmModal\";\nimport {AddNews} from \"../../../../api/api\";\n\nclass TextEditor extends Component{\n\n    state={\n        content: \"\",\n        content_cn: \"\",\n        isLoading: false\n    };\n\n    EditorOnChange = (event,editor)=>{\n        const data = editor.getData();\n        this.setState({ content: data });\n    };\n\n    EditorCNOnchange = (event,editor)=>{\n        const data = editor.getData();\n        this.setState({ content_cn: data });\n    };\n\n\n    ConfirmHandler = () =>{\n        const {content,content_cn} = this.state;\n        this.props.ContentConfirmClick({content: content,content_cn: content_cn})\n    };\n\n\n    ModalConfirmHandler = () =>{\n        const {newsTitle,newsContent} = this.props.NewsData\n        const model = {...newsTitle,...newsContent}\n        const fdata = new FormData()\n        Object.keys(model).forEach(key=>{\n            fdata.append(key,model[key])\n        });\n        this.setState({isLoading:true})\n        AddNews(fdata).then(res=>{\n            this.setState({isLoading:false},()=>{\n                this.props.FinishPublish()\n            });\n            console.log(res)\n        }).catch(err=>{\n            this.setState({isLoading:false})\n            console.log(err)\n        })\n    };\n\n    render(){\n        return(\n            <div>\n                <h3>Content</h3>\n                <CKEditor\n\n                    editor={ClassicEditor}\n                    onInit={editor => {\n                        editor.plugins.get(\n                            \"FileRepository\"\n                        ).createUploadAdapter = loader => {\n                            return new ImageUploader(loader);\n                        };\n                    }}\n                    onChange={(event, editor) =>\n                        this.EditorOnChange(event,editor)\n                    }\n                    config={{\n                        toolbar: [\n                            \"heading\",\n                            \"|\",\n                            \"align\",\n                            \"bold\",\n                            \"italic\",\n                            \"|\",\n                            \"link\",\n                            \"imageUpload\",\n                            \"|\",\n                            \"bulletedList\",\n                            \"numberedList\",\n                            \"blockQuote\",\n                            \"|\",\n                            \"undo\",\n                            \"redo\"\n                        ]\n                    }}\n                />\n\n                <h3 style={{paddingTop: 30}}>内容</h3>\n                <CKEditor\n\n                    editor={ClassicEditor}\n                    onInit={editor => {\n                        editor.plugins.get(\n                            \"FileRepository\"\n                        ).createUploadAdapter = loader => {\n                            return new ImageUploader(loader);\n                        };\n                    }}\n                    onChange={(event, editor) =>\n                        this.EditorCNOnchange(event,editor)\n                    }\n                    config={{\n                        toolbar: [\n                            \"heading\",\n                            \"|\",\n                            \"align\",\n                            \"bold\",\n                            \"italic\",\n                            \"|\",\n                            \"link\",\n                            \"imageUpload\",\n                            \"|\",\n                            \"bulletedList\",\n                            \"numberedList\",\n                            \"blockQuote\",\n                            \"|\",\n                            \"undo\",\n                            \"redo\"\n                        ]\n                    }}\n                />\n                <Button onClick={this.props.ContentStepBackClick} style={{marginTop:15,marginRight:15}} type=\"primary\">Back</Button>\n                <Button onClick={this.ConfirmHandler} style={{marginTop:15}} type=\"primary\">Publish</Button>\n                <GeneralConfirmModal\n                    title=\"Publish Confirmation\"\n                    visible={this.props.NewsData.finalConfirmModalVisible}\n                    confirm={this.ModalConfirmHandler}\n                    hideModal={this.props.CloseFinalConfirmModal}\n                    isLoading={this.state.isLoading}\n                    text=\"Are you sure to publish this news?\"\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state=>{\n    return {\n        NewsData: state.NewsReducer\n    }\n}\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n        ContentStepBackClick: () =>{\n            dispatch(ContentStepBackClick())\n        },\n        ContentConfirmClick: (value)=>{\n            dispatch(ContentConfirmClick(value))\n        },\n        CloseFinalConfirmModal: ()=>{\n            dispatch(CloseFinalConfirmModal())\n        },\n        FinishPublish: ()=>{\n            dispatch(FinishPublish())\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(TextEditor)\n","export const TitleStepNextClick = (value) =>{\n    return {\n        type: \"TitleStepNextClick\",\n        payload: value\n    }\n}\n\nexport const ContentStepBackClick = () =>{\n    return {\n        type: \"ContentStepBackClick\"\n    }\n}\n\nexport const ContentConfirmClick = (value) =>{\n    return {\n        type: \"ContentConfirmClick\",\n        payload: value\n    }\n}\n\n\nexport const CloseFinalConfirmModal =()=>{\n    return {\n        type: \"CloseFinalConfirmModal\"\n    }\n}\n\nexport const FinishPublish = () =>{\n    return {\n        type: \"FinishPublish\"\n    }\n}\n\nexport const ResetAll = () =>{\n    return {\n        type: \"ResetAll\"\n    }\n}\n","import React,{Component} from 'react'\nimport {Form, Input, Button, Upload, Icon} from 'antd';\nimport {UploadImage} from \"../../../../api/api\";\nimport {TitleStepNextClick} from '../../../../redux/actions/NewsAction'\nimport {connect} from 'react-redux'\n\nclass NewsTitleFormWrapper extends Component {\n\n    state={\n        imageFileList:[]\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const model = {\n                    title: values.title,\n                    title_cn: values.title_cn,\n                    image: \"\"\n                };\n\n                if (values.image.length !== 0){\n                    if (values.image[0].response.is_success){\n                        model.image = values.image[0].response.data\n                    }\n                }\n                this.props.TitleStepNextClick(model)\n            }\n        });\n    };\n\n    imageFile = e => {\n        this.setState({\n            imageFileList: e.fileList\n        });\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e && e.fileList;\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form labelCol={{ span: 5 }} wrapperCol={{ span: 12 }} onSubmit={this.handleSubmit}>\n                <Form.Item label=\"Title\">\n                    {getFieldDecorator('title', {\n                        rules: [{ required: true, message: 'Please input your title!' }],\n                    })(<Input />)}\n                </Form.Item>\n\n                <Form.Item label=\"标题\">\n                    {getFieldDecorator('title_cn', {\n                        rules: [{ required: true, message: 'Please input your 标题!' }],\n                    })(<Input />)}\n                </Form.Item>\n\n                <Form.Item label=\"Title Image\">\n                    {getFieldDecorator('image', {\n                        valuePropName: 'image',\n                        getValueFromEvent: this.imageFile,\n                        initialValue: [],\n                        rules: [{ required: true, message: 'Please upload image!' }],\n                    })(\n                        <Upload action={UploadImage} name=\"image\" listType=\"picture\">\n                            {this.state.imageFileList.length===0?(<Button>\n                                <Icon type=\"upload\" /> Click to upload\n                            </Button>):null}\n                        </Upload>\n                    )}\n                </Form.Item>\n\n\n                <Form.Item wrapperCol={{ span: 12, offset: 5 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Next Step\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nconst mapStateToProps = state=>{\n    return {\n        NewsData: state.NewsReducer\n    }\n}\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n        TitleStepNextClick: (value) =>{\n            dispatch(TitleStepNextClick(value))\n        }\n    }\n}\n\nconst NewsTitleForm = Form.create({ name: 'news_title_form' })(NewsTitleFormWrapper);\n\nexport default connect(mapStateToProps,mapDispatchToProps)(NewsTitleForm)\n","import { Result, Icon, Button } from 'antd';\nimport React from 'react'\nimport {\n    ResetAll\n} from \"../../../../redux/actions/NewsAction\";\nimport {connect} from 'react-redux'\n\nconst FinishResult = (props) =>{\n    return (\n        <Result\n            icon={<Icon type=\"smile\" theme=\"twoTone\" />}\n            title=\"Great, we have done all the operations!\"\n            extra={<Button onClick={()=>{window.location = '/dashboard/publish'}} type=\"primary\">Keep adding News</Button>}\n        />\n    )\n};\n\n\nconst mapStateToProps = state=>{\n    return {\n        NewsData: state.NewsReducer\n    }\n}\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n        ResetAll: ()=>{\n            dispatch(ResetAll())\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(FinishResult)\n","import React,{Component} from 'react'\nimport DashboardBody from \"../../../components/common/DashboardBody/DashboardBody\";\nimport TextEditor from \"./TextEditor/TextEditor\";\nimport NewsTitleForm from \"./NewsTitleForm/NewsTitleForm\";\nimport { Steps } from 'antd';\nimport {connect} from 'react-redux'\nimport FinishResult from \"./FinishResult/FinishResult\";\n\n\nconst { Step } = Steps;\n\n\nclass Publish extends Component{\n    static getDerivedStateFromProps(props, state) {\n        if (props.NewsData.stepPosition !== state.pos){\n            return {...state,pos:props.NewsData.StepPosition}\n        }\n\n        return null\n    }\n\n    state={\n        pos:0\n    };\n\n\n\n    render(){\n        return(\n                <DashboardBody title={this.props.name}>\n                    <div style={{paddingBottom:50}}>\n                        <Steps progressDot current={this.state.pos}>\n                            <Step title=\"First Step\" description=\"news title and image\" />\n                            <Step title=\"Second Step\" description=\"content of the news\" />\n                            <Step title=\"Finished\" description=\"Finished\" />\n                        </Steps>\n                    </div>\n                    <div style={{display: this.state.pos===0?'block':'none'}}>\n                        <NewsTitleForm/>\n                    </div>\n                    <div style={{display: this.state.pos===1?'block':'none'}}>\n                        <TextEditor/>\n                    </div>\n                    <div style={{display: this.state.pos===2?'block':'none'}}>\n                        <FinishResult/>\n                    </div>\n                </DashboardBody>\n        )\n    }\n}\n\n\nconst mapStateToProps = state=>{\n    return {\n        NewsData: state.NewsReducer\n    }\n}\n\n\nexport default connect(mapStateToProps)(Publish)\n","import React,{Component,Fragment} from 'react'\nimport DashboardBody from \"../../../components/common/DashboardBody/DashboardBody\";\nimport {Col, Row, Spin} from \"antd\";\nimport {DeleteNews, GetNews} from \"../../../api/api\";\nimport GeneralConfirmModal from \"../../../components/UI/GeneralConfirmModal/GeneralConfirmModal\";\nimport {withRouter} from 'react-router-dom'\nclass NewsInfo extends Component{\n    state = {\n        isLoading: false,\n        data:[],\n        DeleteModalVisible: false,\n        DeleteNewsTitleId: \"\"\n    };\n\n\n    componentDidMount = () =>{\n        this.setState({isLoading:true})\n        GetNews().then(res=>{\n            this.setState({\n                isLoading:false,\n                data: res.data\n            })\n        }).catch(err=>{\n            console.log(err)\n            this.setState({isLoading:false})\n        })\n    };\n\n    DeleteHandler = () =>{\n        this.setState({isLoading:true})\n        DeleteNews(this.state.DeleteNewsTitleId).then(res=>{\n            this.setState({\n                isLoading:false,\n                data: res.data,\n                DeleteModalVisible: false\n            })\n        }).catch(err=>{\n            console.log(err)\n            this.setState({isLoading:false})\n        })\n    };\n\n    DeleteModalOpen = (id) =>{\n        this.setState({\n            DeleteNewsTitleId: id,\n            DeleteModalVisible: true\n        })\n    }\n\n    componentWillUnmount = ()=> {\n        this.setState = state=>{\n            return;\n        }\n    };\n\n    EditClickHandler = (id) =>{\n        const href = '/dashboard/newsedit/' + id\n        this.props.history.push(href)\n    }\n\n    render() {\n        return (\n            <DashboardBody title={this.props.name}>\n                <Spin style={{top:250}} tip=\"Loading...\" spinning={this.state.isLoading}>\n                    {this.state.data.map((s,i)=>{\n                        return (\n                            <Row key={i.toString()} style={{marginBottom:30}}>\n                                <Col span={2} style={{marginRight:20}}>\n                                    <a onClick={()=>{this.EditClickHandler(s._id.$oid)}}>Edit</a>\n                                    <br/>\n                                    <a onClick={()=>{this.DeleteModalOpen(s._id.$oid)}}>Delete</a>\n                                </Col>\n                                <Col style={{marginRight:20}} span={4}>\n                                    <img style={{width:\"100%\",height:\"150px\"}} src={s.image} alt=\"\"/>\n                                </Col>\n                                <Col span={14}>\n                                    <label><strong>Title</strong></label>\n                                    <p>{s.title}</p>\n                                    <label><strong>标题</strong></label>\n                                    <p>{s.title_cn}</p>\n                                </Col>\n                            </Row>\n                        )\n                    })}\n                </Spin>\n                <GeneralConfirmModal\n                    title=\"Delete Confirmation\"\n                    visible={this.state.DeleteModalVisible}\n                    confirm={this.DeleteHandler}\n                    hideModal={()=>{this.setState({DeleteModalVisible: false})}}\n                    isLoading={this.state.isLoading}\n                    text=\"Are you sure to Delete?\"\n                />\n            </DashboardBody>\n        )\n    }\n}\n\nexport default withRouter(NewsInfo)\n","import React,{Component} from 'react'\nimport {Form, Input, Button, Upload, Icon} from 'antd';\nimport {UploadImage} from \"../../../../api/api\";\n\nclass NewsEditFormWrapper extends Component {\n\n    state={\n        imageFileList:[]\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const model = {\n                    title: values.title,\n                    title_cn: values.title_cn,\n                    image: this.props.image\n                }\n\n                if (values.image.length !== 0){\n                    if (values.image[0].response.is_success){\n                        model.image = values.image[0].response.data\n                    }\n                }\n\n                this.props.submit(model)\n\n            }\n        });\n    };\n\n    imageFile = e => {\n        this.setState({\n            imageFileList: e.fileList\n        });\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e && e.fileList;\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form labelCol={{ span: 5 }} wrapperCol={{ span: 12 }} onSubmit={this.handleSubmit}>\n                <Form.Item label=\"Title\">\n                    {getFieldDecorator('title', {\n                        rules: [{ required: true, message: 'Please input your title!' }],\n                        initialValue: this.props.title\n                    })(<Input />)}\n                </Form.Item>\n\n                <Form.Item label=\"标题\">\n                    {getFieldDecorator('title_cn', {\n                        rules: [{ required: true, message: 'Please input your 标题!' }],\n                        initialValue: this.props.title_cn\n                    })(<Input />)}\n                </Form.Item>\n\n                <Form.Item label=\"Title Image\">\n                    {getFieldDecorator('image', {\n                        valuePropName: 'image',\n                        getValueFromEvent: this.imageFile,\n                        initialValue: [],\n                    })(\n                        <Upload action={UploadImage} name=\"image\" listType=\"picture\">\n                            {this.state.imageFileList.length===0?(<Button>\n                                <Icon type=\"upload\" /> Click to upload\n                            </Button>):null}\n                        </Upload>\n                    )}\n                </Form.Item>\n\n\n                <Form.Item wrapperCol={{ span: 12, offset: 5 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Next Step\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\n\nconst NewsEditForm = Form.create({ name: 'news_edit_form' })(NewsEditFormWrapper);\n\nexport default NewsEditForm\n","import React, {Component} from 'react'\nimport CKEditor from '@ckeditor/ckeditor5-react'\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic'\nimport ImageUploader from \"../../../../utils/ImageUploader\";\nimport {Button} from 'antd'\nimport GeneralConfirmModal from \"../../../../components/UI/GeneralConfirmModal/GeneralConfirmModal\";\nimport {connect} from 'react-redux'\nimport {ConfirmContent,ResetAll} from \"../../../../redux/actions/NewsEditAction\";\n\nclass NewsEditTextEditor extends Component{\n\n    state={\n        modalVisible: false,\n        content: \"\",\n        content_cn: \"\"\n    };\n\n    EditorOnChange = (event,editor)=>{\n        const data = editor.getData();\n        this.setState({\n            content: data\n        })\n    };\n\n    EditorCNOnchange = (event,editor)=>{\n        const data = editor.getData();\n        this.setState({\n            content_cn: data\n        })\n    };\n\n\n    ConfirmHandler = () =>{\n        this.setState({\n            modalVisible: true\n        },()=>{\n            this.props.ConfirmContent({content:this.state.content,content_cn:this.state.content_cn})\n        })\n    };\n\n\n    ModalConfirmHandler = () =>{\n        this.props.EditConfirm(()=>{\n            this.setState({modalVisible: false},()=>{\n\n                //call back\n            })\n        })\n    };\n\n    render(){\n        return(\n            <div>\n                <h3>Content</h3>\n                <CKEditor\n                    data={this.props.content}\n                    editor={ClassicEditor}\n                    onInit={editor => {\n                        editor.plugins.get(\n                            \"FileRepository\"\n                        ).createUploadAdapter = loader => {\n                            return new ImageUploader(loader);\n                        };\n                    }}\n                    onChange={(event, editor) =>\n                        this.EditorOnChange(event,editor)\n                    }\n                    config={{\n                        toolbar: [\n                            \"heading\",\n                            \"|\",\n                            \"align\",\n                            \"bold\",\n                            \"italic\",\n                            \"|\",\n                            \"link\",\n                            \"imageUpload\",\n                            \"|\",\n                            \"bulletedList\",\n                            \"numberedList\",\n                            \"blockQuote\",\n                            \"|\",\n                            \"undo\",\n                            \"redo\"\n                        ]\n                    }}\n                />\n\n                <h3 style={{paddingTop: 30}}>内容</h3>\n                <CKEditor\n                    data={this.props.content_cn}\n                    editor={ClassicEditor}\n                    onInit={editor => {\n                        editor.plugins.get(\n                            \"FileRepository\"\n                        ).createUploadAdapter = loader => {\n                            return new ImageUploader(loader);\n                        };\n                    }}\n                    onChange={(event, editor) =>\n                        this.EditorCNOnchange(event,editor)\n                    }\n                    config={{\n                        toolbar: [\n                            \"heading\",\n                            \"|\",\n                            \"align\",\n                            \"bold\",\n                            \"italic\",\n                            \"|\",\n                            \"link\",\n                            \"imageUpload\",\n                            \"|\",\n                            \"bulletedList\",\n                            \"numberedList\",\n                            \"blockQuote\",\n                            \"|\",\n                            \"undo\",\n                            \"redo\"\n                        ]\n                    }}\n                />\n                <Button onClick={this.props.StepBack} style={{marginTop:15,marginRight:15}} type=\"primary\">Back</Button>\n                <Button onClick={this.ConfirmHandler} style={{marginTop:15}} type=\"primary\">Edit</Button>\n                <GeneralConfirmModal\n                    title=\"Edit Confirmation\"\n                    visible={this.state.modalVisible}\n                    confirm={this.ModalConfirmHandler}\n                    hideModal={()=>{this.setState({modalVisible:false})}}\n                    isLoading={this.props.isLoading}\n                    text=\"Are you sure to Edit this news?\"\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        ConfirmContent: (value) =>{\n            dispatch(ConfirmContent(value))\n        },\n        ResetAll: () =>{\n            dispatch(ResetAll())\n        }\n    }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(NewsEditTextEditor)\n","export const ConfirmContent = (value)=>{\n    return {\n        type: \"ConfirmContent\",\n        payload: value\n    }\n}\n\nexport const ResetAll = () =>{\n    return {\n        type: \"ResetAll\"\n    }\n}\n\n","import React,{Component} from 'react'\nimport DashboardBody from \"../../../components/common/DashboardBody/DashboardBody\";\nimport {GetNewsContent, UpdateNews} from \"../../../api/api\";\nimport {Button, Icon, Result, Spin, Steps} from \"antd\";\nimport NewsEditForm from \"./NewsEditForm/NewsEditForm\";\nimport NewsEditTextEditor from \"./NewsEditTextEditor/NewsEditTextEditor\";\nimport {connect} from 'react-redux'\nimport {ResetAll} from \"../../../redux/actions/NewsEditAction\";\nconst { Step } = Steps;\n\nclass NewsEdit extends Component{\n\n    state={\n        isLoading: false,\n        data:{\n            title: \"\",\n            title_cn: \"\",\n            news_title_id: \"\",\n            content_cn: \"\",\n            content: \"\",\n            news_content_id: \"\",\n            image: \"\"\n        },\n        pos: 0\n    };\n\n    UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            data:{\n                ...this.state.data,\n                content: nextProps.ContentData.content,\n                content_cn: nextProps.ContentData.content_cn\n            }\n        })\n    }\n\n\n\n    componentDidMount = () =>{\n        const Id = this.props.match.params.newsTitleId\n        this.setState({isLoading:true})\n        GetNewsContent(Id).then(res=>{\n            this.setState({\n                data:{\n                    title: res.data.news_title.title,\n                    title_cn: res.data.news_title.title_cn,\n                    news_title_id: res.data.news_title_id,\n                    content_cn: res.data.content_cn,\n                    content: res.data.content,\n                    news_content_id: res.data._id,\n                    image: res.data.news_title.image\n                },\n                isLoading:false\n            })\n        }).catch(err=>{\n            console.log(err);\n            this.setState({isLoading:false})\n        })\n    };\n\n    componentWillUnmount = ()=> {\n        this.props.ResetAll()\n        this.setState = state=>{\n            return;\n        }\n    };\n\n    EditConfirm = (cb) =>{\n        let fdata = new FormData()\n        Object.keys(this.state.data).forEach(key=>{\n            fdata.append(key,this.state.data[key])\n        })\n\n        this.setState({isLoading:true})\n        UpdateNews(fdata).then(res=>{\n            this.setState({isLoading:false,pos:2})\n            cb()\n        }).catch(err=>{\n            this.setState({isLoading:false})\n            console.log(err)\n        })\n    }\n\n    NewsEditFormSubmit = (obj) =>{\n        this.setState({\n            data:{\n                ...this.state.data,\n                title: obj.title,\n                title_cn: obj.title_cn,\n                image: obj.image\n            },\n            pos:1\n        })\n    };\n\n    StepBack = () =>{\n        this.setState({pos:0})\n    }\n\n\n    render(){\n        return (\n\n            <DashboardBody title={this.props.name}>\n                <Spin style={{top:250}} tip=\"Loading...\" spinning={this.state.isLoading}>\n                    <Button onClick={()=>{this.props.history.push('/dashboard/news')}} type=\"primary\">\n                        <Icon type=\"left\" />\n                        Go back\n                    </Button>\n                    <div style={{marginTop:50}}>\n                        <Steps progressDot current={this.state.pos}>\n                            <Step title=\"First Step\" description=\"news title and image\" />\n                            <Step title=\"Second Step\" description=\"content of the news\" />\n                            <Step title=\"Finished\" description=\"Finished\" />\n                        </Steps>\n                    </div>\n\n                    <div style={{display: this.state.pos===0?'block':'none'}}>\n                        <NewsEditForm\n                            submit={this.NewsEditFormSubmit}\n                            image={this.state.data.image}\n                            title={this.state.data.title}\n                            title_cn={this.state.data.title_cn}\n                        />\n                    </div>\n                    <div style={{display: this.state.pos===1?'block':'none'}}>\n                        <NewsEditTextEditor\n                            content={this.state.data.content}\n                            content_cn={this.state.data.content_cn}\n                            EditConfirm={this.EditConfirm}\n                            StepBack={this.StepBack}\n                            isLoading={this.state.isLoading}\n                        />\n                    </div>\n\n                    <div style={{display: this.state.pos===2?'block':'none'}}>\n                        <Result\n                            icon={<Icon type=\"smile\" theme=\"twoTone\" />}\n                            title=\"Great, we have done all the operations!\"\n                            extra={<Button onClick={()=>{window.location = '/dashboard/news'}} type=\"primary\">See All News</Button>}\n                        />\n                    </div>\n\n\n                </Spin>\n            </DashboardBody>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        ContentData: state.NewsEditReducer\n    }\n};\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n        ResetAll: () => dispatch(ResetAll())\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(NewsEdit)\n","import React, {Component} from 'react'\nimport DashboardBody from \"../../../components/common/DashboardBody/DashboardBody\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport ImageUploader from \"../../../utils/ImageUploader\";\nimport {Input,Button} from 'antd'\nimport GeneralConfirmModal from \"../../../components/UI/GeneralConfirmModal/GeneralConfirmModal\";\nimport {SendEmailToLocalClient, SendTestEmailToPeople} from \"../../../api/api\";\n\n\nclass EmailSender extends Component{\n    state={\n        content: \"\",\n        subject: \"\",\n        isLoading: false,\n        confirmModalVisible: false,\n        test_email: \"\"\n    };\n\n    EditorOnChange = (event,editor)=>{\n        const data = editor.getData();\n        this.setState({ content: data });\n    };\n\n\n    SubjectOnChange = (e) =>{\n        this.setState({\n            subject: e.target.value\n        })\n    };\n\n\n    SendToAllButtonClickHandler = () =>{\n        this.setState({\n            confirmModalVisible:true\n        })\n    };\n\n\n    ConfirmHandler =() =>{\n        const fdata = new FormData()\n        fdata.append('subject',this.state.subject);\n        fdata.append('content',this.state.content);\n        this.setState({isLoading:true})\n        SendEmailToLocalClient(fdata).then(res=>{\n            this.setState({isLoading:false},()=>{\n                alert(res.data)\n                window.location.reload()\n            })\n        }).catch(err=>{\n            console.log(err)\n            this.setState({isLoading:false})\n        })\n    };\n\n    TemplateTestSend = () =>{\n        if (this.state.test_email === \"\" || this.state.test_email.length <= 5){\n            return;\n        }\n\n        const fdata = new FormData()\n        fdata.append('subject',this.state.subject);\n        fdata.append('content',this.state.content);\n        fdata.append('target_email',this.state.test_email)\n        this.setState({isLoading:true})\n        SendTestEmailToPeople(fdata).then(res=>{\n            this.setState({isLoading:false},()=>{\n                alert(res.data)\n            })\n        }).catch(err=>{\n            console.log(err)\n            this.setState({\n                isLoading:false\n            })\n        })\n    };\n\n    render(){\n        return(\n            <React.Fragment>\n                <DashboardBody title={this.props.name}>\n                    <div style={{paddingBottom: 30}}>\n                        <h3>Email Subject</h3>\n                        <Input onChange={this.SubjectOnChange} placeholder=\"Enter the email subject\" value={this.state.subject}/>\n                    </div>\n                    <div>\n                        <h3>Email Content</h3>\n                        <CKEditor\n                            editor={ClassicEditor}\n                            onInit={editor => {\n                                editor.plugins.get(\n                                    \"FileRepository\"\n                                ).createUploadAdapter = loader => {\n                                    return new ImageUploader(loader);\n                                };\n                            }}\n                            onChange={(event, editor) =>\n                                this.EditorOnChange(event,editor)\n                            }\n                            config={{\n                                toolbar: [\n                                    \"heading\",\n                                    \"|\",\n                                    \"align\",\n                                    \"bold\",\n                                    \"italic\",\n                                    \"|\",\n                                    \"link\",\n                                    \"|\",\n                                    \"bulletedList\",\n                                    \"numberedList\",\n                                    \"blockQuote\",\n                                    \"|\",\n                                    \"undo\",\n                                    \"redo\"\n                                ]\n                            }}\n                        />\n                    </div>\n                    <div style={{paddingTop: 30}}>\n                        <Input onChange={(event => {\n                            this.setState({\n                                test_email: event.target.value\n                            })\n                        })} value={this.state.test_email} placeholder=\"Enter the email recipient to test template ...\"/>\n                        <Button onClick={this.TemplateTestSend} loading={this.state.isLoading} style={{marginTop: 10}} type=\"primary\">\n                            Send\n                        </Button>\n                    </div>\n                    <div style={{paddingTop: 30}}>\n                        <Button onClick={this.SendToAllButtonClickHandler} disabled={this.state.isLoading} type=\"primary\">\n                            Send To All\n                        </Button>\n                    </div>\n                </DashboardBody>\n\n                <GeneralConfirmModal\n                    title=\"Email Sending Confirmation\"\n                    visible={this.state.confirmModalVisible}\n                    confirm={this.ConfirmHandler}\n                    hideModal={()=>{this.setState({confirmModalVisible:false})}}\n                    isLoading={this.state.isLoading}\n                    text=\"Are you sure to send this email to all the local client?\"\n                />\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default EmailSender;\n","import Home from \"../containers/Dashboard/Home/Home\";\nimport LotteryManagement from \"../containers/Dashboard/LotteryManagement/LotteryManagement\";\nimport WebClient from \"../containers/Dashboard/WebClient/WebClient\";\nimport LocalClient from \"../containers/Dashboard/LocalClient/LocalClient\";\nimport StaffInfo from \"../containers/Dashboard/StaffInfo/StaffInfo\";\nimport CompanyDescription from \"../containers/Dashboard/CompanyDescription/CompanyDescription\";\nimport Brand from \"../containers/Dashboard/Brand/Brand\";\nimport ProductCategory from \"../containers/Dashboard/ProductCategory/ProductCategory\";\nimport ChangePassword from \"../containers/Dashboard/ChangePassword/ChangePassword\";\nimport Product from \"../containers/Dashboard/Product/Product\";\nimport News from \"../containers/Dashboard/Publish/Publish\";\nimport NewsInfo from \"../containers/Dashboard/NewsInfo/NewsInfo\";\nimport NewsEdit from \"../containers/Dashboard/NewsEdit/NewsEdit\";\nimport EmailSender from \"../containers/Dashboard/EmailSender/EmailSender\";\n\nconst match = \"/dashboard\";\nexport const DashboardRoute = [\n    {\n        name: \"Home\",\n        component: Home,\n        path: match +\"/home\",\n        pos:0\n    },\n    {\n        name: \"Lottery Management\",\n        component: LotteryManagement,\n        path: match +\"/lotterymanagement\",\n        pos:1\n    },\n    {\n        name: \"Web Client\",\n        component: WebClient,\n        path: match +\"/webclient\",\n        pos:2\n    },\n    {\n        name: \"Local Client\",\n        component: LocalClient,\n        path: match +\"/localclient\",\n        pos:3\n    },\n    {\n        name: \"Staff Information\",\n        component: StaffInfo,\n        path: match +\"/staffinfo\",\n        pos:4\n    },\n    {\n        name: \"Company Description\",\n        component: CompanyDescription,\n        path: match +\"/companydescription\",\n        pos:5\n    },\n    {\n        name: \"Brand\",\n        component: Brand,\n        path: match +\"/brand\",\n        pos:6\n    },\n    {\n        name: \"Product Category\",\n        component: ProductCategory,\n        path: match + \"/productcategory\",\n        pos: 7\n    },\n    {\n        name: \"Change Password\",\n        component: ChangePassword,\n        path: match + '/changepassword',\n        pos: null,\n    },\n    {\n        name: \"Product\",\n        component: Product,\n        path: match + \"/product/:productCategoryId\",\n        pos:null\n    },\n    {\n        name: \"Publish News\",\n        component: News,\n        path: match + '/publish',\n        pos: 8\n    },\n    {\n        name: \"News Information\",\n        component: NewsInfo,\n        path: match + '/news',\n        pos: 9\n    },\n    {\n        name: \"News Edit\",\n        component: NewsEdit,\n        path: match + '/newsedit/:newsTitleId',\n        pos:null\n    },\n    {\n        name: \"Email\",\n        component: EmailSender,\n        path: match + '/email',\n        pos: 10\n    }\n];\n\nexport const menu = [\n    {\n        name: \"Home\",\n        component: Home,\n        icon: \"home\",\n        path: match +\"/home\",\n        pos:0\n    },\n    {\n        name: \"Lottery Management\",\n        component: LotteryManagement,\n        icon: \"smile\",\n        path: match +\"/lotterymanagement\",\n        pos:1\n    },\n    {\n        name: \"Web Management\",\n        icon: \"global\",\n        key: \"sub1\",\n        items: [\n            {\n                name: \"Web Client\",\n                component: WebClient,\n                icon: \"contacts\",\n                path: match +\"/webclient\",\n                pos:2\n            },\n            {\n                name: \"Staff Info\",\n                component: StaffInfo,\n                icon: \"team\",\n                path: match +\"/staffinfo\",\n                pos:4\n            },\n            {\n                name: \"About\",\n                component: CompanyDescription,\n                icon: \"info\",\n                path: match +\"/companydescription\",\n                pos:5\n            },\n            {\n                name: \"Brand\",\n                component: Brand,\n                icon: \"folder\",\n                path: match +\"/brand\",\n                pos:6\n            },\n            {\n                name: \"Product\",\n                component: ProductCategory,\n                icon: \"shop\",\n                path: match + \"/productcategory\",\n                pos: 7\n            },\n            {\n                name: \"Publish\",\n                component: News,\n                icon: \"form\",\n                path: match + '/publish',\n                pos: 8\n            },\n            {\n                name: \"News Info\",\n                component: NewsInfo,\n                icon: \"bulb\",\n                path: match + '/news',\n                pos: 9\n            }\n        ]\n    },\n    {\n        name: \"Local Management\",\n        icon: \"calendar\",\n        key: \"sub2\",\n        items:[\n            {\n                name: \"Local Client\",\n                component: LocalClient,\n                icon: \"user\",\n                path: match +\"/localclient\",\n                pos:3\n            },\n            {\n                name: \"Email\",\n                component: EmailSender,\n                icon: 'mail',\n                path: match + '/email',\n                pos: 10\n            }\n        ]\n    }\n];\n","import React, {Component,Suspense,lazy} from 'react'\nimport {\n    Switch,\n    Route,\n    Redirect,\n    withRouter\n} from \"react-router-dom\";\nimport ComponentWithParameter from \"../../hoc/ComponentWithParameter\";\nimport {connect} from 'react-redux'\nimport {SetPos} from \"../../redux/actions/menuBarAction\";\nimport DashboardRedirect from \"./DashboardRedirect/DashboardRedirect\";\nimport {TokenValidate} from '../../api/api'\nimport {DashboardRoute,menu} from '../../Route/DashboardRoute'\nconst DashBoardLayout = lazy(()=>import('../../components/layout/DashboardLayout/DashboardLayout'))\nclass Dashboard extends Component{\n    constructor(props) {\n        super(props);\n        TokenValidate().then(res=>{\n            console.log(\"token 没过期\")\n        })\n    }\n\n    render(){\n        return (\n            <Suspense fallback={<div>Loading ...</div>}>\n                <DashBoardLayout screens={menu}>\n                    <Switch>\n                        {DashboardRoute.map((s,i)=>{\n                            return (\n                                <Route key={i.toString()} path={s.path} component={ComponentWithParameter(s.component,this.props.SetPos,s.pos,s.name)}/>\n                            )\n                        })}\n                        <Route path={`${this.props.match.path}/`} component={DashboardRedirect}/>\n                        <Redirect from={\"*\"} to={\"/404\"}/>\n                    </Switch>\n                </DashBoardLayout>\n            </Suspense>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        menuBarPos: state.menuBarReducer\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        SetPos: (value) =>{\n            dispatch(SetPos(value))\n        }\n    }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(Dashboard))\n","export const SetPos = (value) =>{\n    return {\n        type: 'SetPos',\n        payload: value\n    }\n};\n","import React,{Component} from 'react'\nimport {withRouter} from 'react-router-dom';\n\n\nclass Loading extends Component{\n\n    componentDidMount = () => {\n        const token = localStorage.getItem(\"token\")\n        if (token){\n            this.props.history.push('/dashboard')\n        }else{\n            this.props.history.push('/login')\n        }\n    };\n    render() {\n        return (\n            <div>Loading ...</div>\n        )\n    }\n}\n\nexport default withRouter(Loading)\n","import React,{Component} from 'react';\nimport  './App.css';\nimport LoginTemplate from \"./containers/Login/Login\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport NotFound from \"./containers/404/NotFound\";\nimport PrivateRoute from \"./components/Route/PrivateRoute\";\nimport Dashboard from \"./containers/Dashboard/Dashboard\";\nimport Loading from \"./components/common/Loading/Loading\";\n\n\nclass App extends Component{\n    render(){\n        return (\n            <Router>\n                <Switch>\n                    <Route exact path=\"/404\" component={NotFound}/>\n                    <Route path=\"/\" exact component={Loading}/>\n                    <Route path=\"/login\" component={LoginTemplate}/>\n                    <PrivateRoute path='/dashboard' component={Dashboard}/>\n                    <Redirect from={\"*\"} to={\"/404\"}/>\n                </Switch>\n            </Router>\n        )\n    }\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const menuBarReducer = (state=0,action) =>{\n    switch (action.type) {\n        case \"SetPos\":\n            return action.payload\n        default:\n            return state\n    }\n}\n\nexport default menuBarReducer\n","const lotteryReducer = (state=[],action) =>{\n    switch (action.type) {\n        case \"setData\":\n            return action.payload\n        default:\n            return state\n    }\n}\n\nexport default lotteryReducer\n","const localClientReducer = (state=[],action) =>{\n    switch (action.type) {\n        case \"setData\":\n            return action.payload\n        default:\n            return state\n    }\n}\n\nexport default localClientReducer\n","const localClientReducer = (state=[],action) =>{\n    switch (action.type) {\n        case \"setData\":\n            return action.payload\n        default:\n            return state\n    }\n}\n\nexport default localClientReducer\n","const BrandReducer = (state=[],action) =>{\n    switch (action.type) {\n        case \"setData\":\n            return action.payload\n        default:\n            return state\n    }\n}\n\nexport default BrandReducer\n","const ProductCategoryReducer = (state={isLoading:false,data:[]},action) =>{\n    switch (action.type) {\n        case \"BeforeFetchData\":\n            return {isLoading: true, data: []};\n        case \"FetchDataSuccess\":\n            return  {isLoading: false, data: action.payload};\n        case \"FetchDataFail\":\n            let data = state.data;\n            return {isLoading: false,data: data};\n        default:\n            return state\n    }\n};\n\nexport default ProductCategoryReducer\n","const initialState = {\n    newsTitle: {\n        title: \"\",\n        title_cn:\"\",\n        image:\"\"\n    },\n    newsContent:{\n        content: \"\",\n        content_cn: \"\"\n    },\n    stepPosition: 0,\n    finalConfirmModalVisible: false\n}\n\nconst NewsReducer = (state=initialState,action) =>{\n    switch (action.type) {\n        case \"TitleStepNextClick\":\n            return {newsTitle: action.payload, StepPosition: 1, newsContent: state.newsContent,finalConfirmModalVisible:false};\n        case \"ContentStepBackClick\":\n            return {newsTitle: state.newsTitle,StepPosition: 0, newsContent: state.newsContent,finalConfirmModalVisible:false};\n        case \"ContentConfirmClick\":\n            return {newsTitle: state.newsTitle,StepPosition: 1,newsContent: action.payload,finalConfirmModalVisible:true};\n        case \"CloseFinalConfirmModal\":\n            return {newsTitle: state.newsTitle,StepPosition: 1,newsContent: state.payload,finalConfirmModalVisible:false};\n        case \"FinishPublish\":\n            return {...initialState,StepPosition: 2};\n        case \"ResetAll\":\n            return {...initialState}\n        default:\n            return state\n    }\n};\n\nexport default NewsReducer\n","const initialState = {\n    content: \"\",\n    content_cn: \"\"\n}\n\nconst NewsEditReducer = (state=initialState,action) =>{\n    switch (action.type) {\n        case \"ConfirmContent\":\n            return {content: action.payload.content,content_cn: action.payload.content_cn}\n        case \"ResetAll\":\n            return initialState\n        default:\n            return state\n    }\n};\n\nexport default NewsEditReducer\n","import { combineReducers } from \"redux\";\nimport menuBarReducer from './menuBarReducer'\nimport lotteryReducer from './lotteryReducer'\nimport localClientReducer from \"./localClientReducer\";\nimport StaffInfoReducer from './StaffInfoReducer'\nimport BrandReducer from './BrandReducer'\nimport ProductCategoryReducer from \"./ProductCategoryReducer\";\nimport NewsReducer from './NewsReducer'\nimport NewsEditReducer from \"./NewsEditReducer\";\nexport default combineReducers({\n    menuBarReducer,lotteryReducer,localClientReducer,StaffInfoReducer,BrandReducer,\n    ProductCategoryReducer,NewsReducer,NewsEditReducer\n});\n","import { createStore,applyMiddleware } from \"redux\";\nimport reducer from \"./reducers/index\";\nimport thunk from 'redux-thunk'\n\nexport default createStore(reducer,applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store'\nimport {Provider} from 'react-redux'\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}