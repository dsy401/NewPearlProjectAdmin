{"version":3,"sources":["components/layout/DashboardLayout/DashboardLayout.css","asserts/image/new_pearl_logo.png","components/layout/DashboardLayout/DashboardLayout.js"],"names":["module","exports","connect","state","menuBarPos","menuBarReducer","withRouter","props","ClickHandler","s","history","push","Footer","Layout","Sider","screens","style","overflow","height","position","left","className","classes","logo","width","src","new_pearl_logo","alt","theme","mode","defaultOpenKeys","selectedKeys","map","i","items","SubMenu","key","title","type","icon","name","q","Item","pos","toString","onClick","path","marginLeft","children","textAlign","Date","getFullYear"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,KAAO,iC,oBCDzBD,EAAOC,QAAU,IAA0B,4C,iCCA3C,wGA8EeC,uBANS,SAAAC,GACpB,MAAO,CACHC,WAAYD,EAAME,kBAIXH,CAAyBI,aApEhB,SAACC,GACrB,IAAMC,EAAe,SAACC,GAClBF,EAAMG,QAAQC,KAAKF,IAGhBG,EAAkBC,IAAlBD,OAAQE,EAAUD,IAAVC,MACGP,EAAMQ,QAAjBA,QACP,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,KACI,kBAACD,EAAD,CACIE,MAAO,CACHC,SAAU,OACVC,OAAQ,QACRC,SAAU,QACVC,KAAM,IAGV,yBAAKC,UAAWC,IAAQC,MACpB,yBAAKP,MAAO,CAACQ,MAAM,MAAMN,OAAO,OAAQO,IAAKC,IAAgBC,IAAI,MAGrE,kBAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,SAASC,gBAAiB,CAAC,OAAO,QAASC,aAAc,CAAC,GAAD,OAAIxB,EAAMH,cACtFG,EAAMQ,QAAQiB,KAAI,SAACvB,EAAEwB,GAClB,OAAIxB,EAAEyB,MAEE,kBAAC,IAAKC,QAAN,CAAcC,IAAK3B,EAAE2B,IAAKC,MAAO,8BAC7B,kBAAC,IAAD,CAAMC,KAAM7B,EAAE8B,OACd,8BAAO9B,EAAE+B,QAER/B,EAAEyB,MAAMF,KAAI,SAAAS,GACT,OACI,kBAAC,IAAKC,KAAN,CAAWN,IAAKK,EAAEE,IAAIC,WAAYC,QAAS,WAAKrC,EAAaiC,EAAEK,QAC3D,kBAAC,IAAD,CAAMR,KAAMG,EAAEF,OACd,0BAAMlB,UAAU,YAAYoB,EAAED,WAQ9C,kBAAC,IAAKE,KAAN,CAAWN,IAAK3B,EAAEkC,IAAIC,WAAYC,QAAS,WAAKrC,EAAaC,EAAEqC,QAC3D,kBAAC,IAAD,CAAMR,KAAM7B,EAAE8B,OACd,0BAAMlB,UAAU,YAAYZ,EAAE+B,YAOtD,kBAAC,IAAD,CAAQxB,MAAO,CAAE+B,WAAY,MACxBxC,EAAMyC,SACP,kBAACpC,EAAD,CAAQI,MAAO,CAAEiC,UAAW,WAA5B,8BAAgE,IAAIC,MAAOC,cAA3E","file":"static/js/3.566f3388.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"DashboardLayout__logo__39em2\"};","module.exports = __webpack_public_path__ + \"static/media/new_pearl_logo.76f33ebc.png\";","import React, {Component,Fragment} from 'react'\nimport classes from './DashboardLayout.css'\nimport new_pearl_logo from '../../../asserts/image/new_pearl_logo.png'\nimport { Layout, Menu, Icon } from 'antd';\nimport {\n    withRouter\n} from \"react-router-dom\";\nimport {connect} from 'react-redux'\n\n\nconst DashboardLayout = (props) =>{\n    const ClickHandler = (s) =>{\n        props.history.push(s)\n    };\n\n    const {Footer, Sider } = Layout;\n    const {screens} = props.screens;\n    return (\n        <Fragment>\n            <Layout>\n                <Sider\n                    style={{\n                        overflow: 'auto',\n                        height: '100vh',\n                        position: 'fixed',\n                        left: 0,\n                    }}\n                >\n                    <div className={classes.logo}>\n                        <img style={{width:\"90%\",height:\"90%\"}} src={new_pearl_logo} alt=\"\"/>\n                    </div>\n\n                    <Menu theme=\"dark\" mode=\"inline\" defaultOpenKeys={['sub1','sub2']} selectedKeys={[`${props.menuBarPos}`]}>\n                        {props.screens.map((s,i)=>{\n                            if (s.items){\n                                return (\n                                    <Menu.SubMenu key={s.key} title={<span>\n                                        <Icon type={s.icon}/>\n                                        <span>{s.name}</span>\n                                    </span>}>\n                                        {s.items.map(q=>{\n                                            return (\n                                                <Menu.Item key={q.pos.toString()} onClick={()=>{ClickHandler(q.path)}}>\n                                                    <Icon type={q.icon} />\n                                                    <span className=\"nav-text\">{q.name}</span>\n                                                </Menu.Item>\n                                            )\n                                        })}\n                                    </Menu.SubMenu>\n                                )\n                            }else{\n                                return (\n                                    <Menu.Item key={s.pos.toString()} onClick={()=>{ClickHandler(s.path)}}>\n                                        <Icon type={s.icon} />\n                                        <span className=\"nav-text\">{s.name}</span>\n                                    </Menu.Item>\n                                )\n                            }\n                        })}\n                    </Menu>\n                </Sider>\n                <Layout style={{ marginLeft: 200 }}>\n                    {props.children}\n                    <Footer style={{ textAlign: 'center' }}>Thriving Building Ltd Â©{new Date().getFullYear()} Created by Oliver Deng</Footer>\n                </Layout>\n            </Layout>\n        </Fragment>\n    )\n};\n\n\n\nconst mapStateToProps = state => {\n    return {\n        menuBarPos: state.menuBarReducer\n    }\n};\n\nexport default connect(mapStateToProps)(withRouter(DashboardLayout))\n"],"sourceRoot":""}